<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_bubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Bubble*/
depth=-bbox_bottom*100;
/*Don't go outside view boundary*/if x&lt;view_xview+32{x=view_xview+32;}if x&gt;view_xview+view_wview-32{x=view_xview+view_wview-32;}if y&lt;view_yview+32{y=view_yview+32;}if y&gt;view_yview+view_hview-32{y=view_yview+view_hview-32;}

/*Customisable keyboard array*/
if player=1 or player=0{
gamepad_set_axis_deadzone(0,0.5);
key_up=(keyboard_check(vk_up))and(!keyboard_check(vk_down))or(keyboard_check(vk_numpad8))and(!keyboard_check(vk_numpad2))or(keyboard_check(ord("W")))and(!keyboard_check(ord("S")))or(gamepad_button_check(0,gp_padu))and(!gamepad_button_check(0,gp_padd))or(gamepad_axis_value(0,gp_axislv)&lt;0)and(!gamepad_axis_value(0,gp_axislv)&gt;0);
key_left=(keyboard_check(vk_left))and(!keyboard_check(vk_right))or(keyboard_check(vk_numpad4))and(!keyboard_check(vk_numpad6))or(keyboard_check(ord("A")))and(!keyboard_check(ord("D")))or(gamepad_button_check(0,gp_padl))and(!gamepad_button_check(0,gp_padr))or(gamepad_axis_value(0,gp_axislh)&lt;0)and(!gamepad_axis_value(0,gp_axislh)&gt;0);
key_right=(keyboard_check(vk_right))and(!keyboard_check(vk_left))or(keyboard_check(vk_numpad6))and(!keyboard_check(vk_numpad4))or(keyboard_check(ord("D")))and(!keyboard_check(ord("A")))or(gamepad_button_check(0,gp_padr))and(!gamepad_button_check(0,gp_padl))or(gamepad_axis_value(0,gp_axislh)&gt;0)and(!gamepad_axis_value(0,gp_axislh)&lt;0);
key_down=(keyboard_check(vk_down))and(!keyboard_check(vk_up))or(keyboard_check(vk_numpad2))and(!keyboard_check(vk_numpad8))or(keyboard_check(ord("S")))and(!keyboard_check(ord("W")))or(gamepad_button_check(0,gp_padd))and(!gamepad_button_check(0,gp_padu))or(gamepad_axis_value(0,gp_axislv)&gt;0)and(!gamepad_axis_value(0,gp_axislv)&lt;0);
key_a=global.controls_layout=1and(gamepad_button_check_pressed(0,gp_face1))or global.controls_layout=1and(gamepad_button_check_pressed(0,gp_face2))or global.controls_layout=2and(gamepad_button_check_pressed(0,gp_face3))or(keyboard_check_pressed(ord("Z")))or(keyboard_check_pressed(vk_enter))or(keyboard_check_pressed(vk_space));
}
if player=2{
gamepad_set_axis_deadzone(1,0.5);
key_up=(gamepad_button_check(1,gp_padu))and(!gamepad_button_check(1,gp_padd))or(gamepad_axis_value(1,gp_axislv)&lt;0)and(!gamepad_axis_value(1,gp_axislv)&gt;0);
key_left=(gamepad_button_check(1,gp_padl))and(!gamepad_button_check(1,gp_padr))or(gamepad_axis_value(1,gp_axislh)&lt;0)and(!gamepad_axis_value(1,gp_axislh)&gt;0);
key_right=(gamepad_button_check(1,gp_padr))and(!gamepad_button_check(1,gp_padl))or(gamepad_axis_value(1,gp_axislh)&gt;0)and(!gamepad_axis_value(1,gp_axislh)&lt;0);
key_down=(gamepad_button_check(1,gp_padd))and(!gamepad_button_check(1,gp_padu))or(gamepad_axis_value(1,gp_axislv)&gt;0)and(!gamepad_axis_value(1,gp_axislv)&lt;0);
key_a=global.controls_layout=1and(gamepad_button_check_pressed(1,gp_face1))or global.controls_layout=1and(gamepad_button_check_pressed(1,gp_face2))or global.controls_layout=2and(gamepad_button_check_pressed(1,gp_face3));
}
if player=3{
gamepad_set_axis_deadzone(2,0.5);
key_up=(gamepad_button_check(2,gp_padu))and(!gamepad_button_check(2,gp_padd))or(gamepad_axis_value(2,gp_axislv)&lt;0)and(!gamepad_axis_value(2,gp_axislv)&gt;0);
key_left=(gamepad_button_check(2,gp_padl))and(!gamepad_button_check(2,gp_padr))or(gamepad_axis_value(2,gp_axislh)&lt;0)and(!gamepad_axis_value(2,gp_axislh)&gt;0);
key_right=(gamepad_button_check(2,gp_padr))and(!gamepad_button_check(2,gp_padl))or(gamepad_axis_value(2,gp_axislh)&gt;0)and(!gamepad_axis_value(2,gp_axislh)&lt;0);
key_down=(gamepad_button_check(2,gp_padd))and(!gamepad_button_check(2,gp_padu))or(gamepad_axis_value(2,gp_axislv)&gt;0)and(!gamepad_axis_value(2,gp_axislv)&lt;0);
key_a=global.controls_layout=1and(gamepad_button_check_pressed(2,gp_face1))or global.controls_layout=1and(gamepad_button_check_pressed(2,gp_face2))or global.controls_layout=2and(gamepad_button_check_pressed(2,gp_face3));
}
if player=4{
gamepad_set_axis_deadzone(3,0.5);
key_up=(gamepad_button_check(3,gp_padu))and(!gamepad_button_check(3,gp_padd))or(gamepad_axis_value(3,gp_axislv)&lt;0)and(!gamepad_axis_value(3,gp_axislv)&gt;0);
key_left=(gamepad_button_check(3,gp_padl))and(!gamepad_button_check(3,gp_padr))or(gamepad_axis_value(3,gp_axislh)&lt;0)and(!gamepad_axis_value(3,gp_axislh)&gt;0);
key_right=(gamepad_button_check(3,gp_padr))and(!gamepad_button_check(3,gp_padl))or(gamepad_axis_value(3,gp_axislh)&gt;0)and(!gamepad_axis_value(3,gp_axislh)&lt;0);
key_down=(gamepad_button_check(3,gp_padd))and(!gamepad_button_check(3,gp_padu))or(gamepad_axis_value(3,gp_axislv)&gt;0)and(!gamepad_axis_value(3,gp_axislv)&lt;0);
key_a=global.controls_layout=1and(gamepad_button_check_pressed(3,gp_face1))or global.controls_layout=1and(gamepad_button_check_pressed(3,gp_face2))or global.controls_layout=2and(gamepad_button_check_pressed(3,gp_face3));
}

image_speed=0.5;
gravity=0;
if key_up{vspeed-=0.4;}
if key_left{hspeed-=0.4;image_xscale=-1;}
if key_right{hspeed+=0.4;image_xscale=+1;}
if key_down{vspeed+=0.4;}
if key_a and!place_meeting(x,y,obj_wall){obj=instance_create(x,y,obj_player)with(obj){vspeed=-11.5;}instance_nearest(x,y,obj_player)player=player;instance_destroy();}
if vspeed&lt;-4{vspeed=-4;}if hspeed&lt;-4{hspeed=-4;}if hspeed&gt;+4{hspeed=+4;}if vspeed&gt;+4{vspeed=+4;}
friction=0.2;

/*String*/draw_line_width_colour(x,y,x,0,6,c_black,c_black);draw_line_width_colour(x,y,x,0,3,c_white,c_white);
draw_self();

/*If there are no more players in the room*/if instance_number(obj_player)&lt;1{obj=instance_create(x,y,obj_player_die);with(obj){player=instance_nearest(x,y,obj_player_bubble).player;}instance_destroy();}

/*Multiplayer Colors*/
if instance_number(obj_player)&gt;1 and instance_number(obj_player_bubble)&gt;1{
if player=1{image_blend=c_red;}
else if player=2{image_blend=c_green;}
else if player=3{image_blend=c_yellow;}
else if player=4{image_blend=c_blue;}
draw_set_halign(fa_center);draw_set_valign(fa_center);
draw_text_transformed_colour(x-2,y-sprite_height,"P"+string(player),2,2,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x+2,y-sprite_height,"P"+string(player),2,2,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x,y-sprite_height-2,"P"+string(player),2,2,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x,y-sprite_height+2,"P"+string(player),2,2,0,c_black,c_black,c_black,c_black,1);
if player=1{draw_text_transformed_colour(x,y-sprite_height,"P"+string(player),2,2,0,c_red,c_red,c_red,c_red,1);}
if player=2{draw_text_transformed_colour(x,y-sprite_height,"P"+string(player),2,2,0,c_green,c_green,c_green,c_green,1);}
if player=3{draw_text_transformed_colour(x,y-sprite_height,"P"+string(player),2,2,0,c_yellow,c_yellow,c_yellow,c_yellow,1);}
if player=4{draw_text_transformed_colour(x,y-sprite_height,"P"+string(player),2,2,0,c_blue,c_blue,c_blue,c_blue,1);}}
/*Multiplayer Colors End*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
