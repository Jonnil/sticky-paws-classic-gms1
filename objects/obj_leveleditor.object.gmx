<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Create Foreground*/
if asset_get_type("obj_level_map_mbb")==asset_object and instance_number(obj_level_map_mbb)&lt;=0{instance_create(0,0,obj_level_map_mbb);}
if asset_get_type("obj_level_map_mbf")==asset_object and instance_number(obj_level_map_mbf)&lt;=0{instance_create(0,0,obj_level_map_mbf);}/*Create Foreground END*/

audio_stop_all();
if global.actually_play_edited_level=true{instance_destroy();}
/*Set correct fps*/room_speed=60;/*Set correct fps END*/
x=mouse_x;y=mouse_y;controller_x=mouse_x;controller_y=mouse_y;drag_x=mouse_x;drag_y=mouse_y;cursor_x=x;cursor_y=y;
place_object=noone;
selected_object=0;
selected_object_menu_x=0;
selected_menu_alpha=0;
total_number_of_objects=0;
quit_level_editor=0;
use_controller=false;
drag_object=false;
global.time_countdown=500;
erase_mode=false;
can_input_level_name=false;
quit_level_editor=false;
menu_joystick_delay=0;
pause=false;
menu="continue"
name_enter_blink=0;
menu_delay=0;
/*Options*/remapping_player=1;input_key=false;can_remap_key=false;can_navigate=false;/*Options END*/
/*Customize look of Options Menu*/
menu_y_offset=-100;
c_menu_outline=c_black;
c_menu_fill=c_white;
/*Customize look of Options Menu END*/


/*Load Level Information*/
if(file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini")){
ini_open(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini");
if(ini_key_exists("Info","level_name")){level_name=ini_read_string("Info","level_name",0);}else{level_name="";}
if(ini_key_exists("Info","view_xview")){view_xview=ini_read_string("Info","view_xview",0);}
if(ini_key_exists("Info","view_yview")){view_yview=ini_read_string("Info","view_yview",0);}
ini_close();}else{level_name="";}/*Load Level Information END*/

/*Update Background1*/
/*BMP small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background1.bmp"){custom_background1=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background1.bmp",false,false);background_htiled[0]=true;background_vtiled[0]=true;background_foreground[0]=false;}else
/*BMP big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background1.bmp"){custom_background1=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background1.bmp",false,false);background_htiled[0]=true;background_vtiled[0]=true;background_foreground[0]=false;}else
/*PNG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background1.png"){custom_background1=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background1.png",false,false);background_htiled[0]=true;background_vtiled[0]=true;background_foreground[0]=false;}else
/*PNG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background1.png"){custom_background1=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background1.png",false,false);background_htiled[0]=true;background_vtiled[0]=true;background_foreground[0]=false;}else
/*GIF small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background1.gif"){custom_background1=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background1.gif",false,false);background_htiled[0]=true;background_vtiled[0]=true;background_foreground[0]=false;}else
/*GIF big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background1.gif"){custom_background1=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background1.gif",false,false);background_htiled[0]=true;background_vtiled[0]=true;background_foreground[0]=false;}else
/*JPG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background1.jpg"){custom_background1=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background1.jpg",false,false);background_htiled[0]=true;background_vtiled[0]=true;background_foreground[0]=false;}else
/*JPG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background1.jpg"){custom_background1=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background1.jpg",false,false);background_htiled[0]=true;background_vtiled[0]=true;background_foreground[0]=false;}else
{custom_background1=background_index[0];}/*Update Background1 END*/

/*Update Background2*/
/*BMP small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background2.bmp"){custom_background2=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background2.bmp",false,false);background_htiled[1]=true;background_vtiled[1]=true;background_foreground[1]=false;}else
/*BMP big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background2.bmp"){custom_background2=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background2.bmp",false,false);background_htiled[1]=true;background_vtiled[1]=true;background_foreground[1]=false;}else
/*PNG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background2.png"){custom_background2=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background2.png",false,false);background_htiled[1]=true;background_vtiled[1]=true;background_foreground[1]=false;}else
/*PNG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background2.png"){custom_background2=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background2.png",false,false);background_htiled[1]=true;background_vtiled[1]=true;background_foreground[1]=false;}else
/*GIF small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background2.gif"){custom_background2=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background2.gif",false,false);background_htiled[1]=true;background_vtiled[1]=true;background_foreground[1]=false;}else
/*GIF big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background2.gif"){custom_background2=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background2.gif",false,false);background_htiled[1]=true;background_vtiled[1]=true;background_foreground[1]=false;}else
/*JPG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background2.jpg"){custom_background2=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background2.jpg",false,false);background_htiled[1]=true;background_vtiled[1]=true;background_foreground[1]=false;}else
/*JPG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background2.jpg"){custom_background2=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background2.jpg",false,false);background_htiled[1]=true;background_vtiled[1]=true;background_foreground[1]=false;}else
{custom_background2=background_index[1];}/*Update Background2 END*/

/*Update Background3*/
/*BMP small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background3.bmp"){custom_background3=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background3.bmp",false,false);background_htiled[2]=true;background_vtiled[2]=true;background_foreground[2]=false;}else
/*BMP big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background3.bmp"){custom_background3=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background3.bmp",false,false);background_htiled[2]=true;background_vtiled[2]=true;background_foreground[2]=false;}else
/*PNG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background3.png"){custom_background3=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background3.png",false,false);background_htiled[2]=true;background_vtiled[2]=true;background_foreground[2]=false;}else
/*PNG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background3.png"){custom_background3=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background3.png",false,false);background_htiled[2]=true;background_vtiled[2]=true;background_foreground[2]=false;}else
/*GIF small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background3.gif"){custom_background3=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background3.gif",false,false);background_htiled[2]=true;background_vtiled[2]=true;background_foreground[2]=false;}else
/*GIF big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background3.gif"){custom_background3=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background3.gif",false,false);background_htiled[2]=true;background_vtiled[2]=true;background_foreground[2]=false;}else
/*JPG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background3.jpg"){custom_background3=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background3.jpg",false,false);background_htiled[2]=true;background_vtiled[2]=true;background_foreground[2]=false;}else
/*JPG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background3.jpg"){custom_background3=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background3.jpg",false,false);background_htiled[2]=true;background_vtiled[2]=true;background_foreground[2]=false;}else
{custom_background3=background_index[2];}/*Update Background3 END*/

/*Update Background4*/
/*BMP small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background4.bmp"){custom_background4=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background4.bmp",false,false);background_htiled[3]=true;background_vtiled[3]=true;background_foreground[3]=false;}else
/*BMP big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background4.bmp"){custom_background4=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background4.bmp",false,false);background_htiled[3]=true;background_vtiled[3]=true;background_foreground[3]=false;}else
/*PNG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background4.png"){custom_background4=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background4.png",false,false);background_htiled[3]=true;background_vtiled[3]=true;background_foreground[3]=false;}else
/*PNG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background4.png"){custom_background4=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background4.png",false,false);background_htiled[3]=true;background_vtiled[3]=true;background_foreground[3]=false;}else
/*GIF small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background4.gif"){custom_background4=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background4.gif",false,false);background_htiled[3]=true;background_vtiled[3]=true;background_foreground[3]=false;}else
/*GIF big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background4.gif"){custom_background4=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background4.gif",false,false);background_htiled[3]=true;background_vtiled[3]=true;background_foreground[3]=false;}else
/*JPG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background4.jpg"){custom_background4=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\background4.jpg",false,false);background_htiled[3]=true;background_vtiled[3]=true;background_foreground[3]=false;}else
/*JPG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background4.jpg"){custom_background4=background_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Background4.jpg",false,false);background_htiled[3]=true;background_vtiled[3]=true;background_foreground[3]=false;}else
{custom_background4=background_index[3];}/*Update Background4 END*/


lives=5;
/*View Size*/view_wview=1392;view_hview=736;/*View Size End*/
/*Default Views:   set_view_wview = 1024+400-32   set_view_hview = 768-32   */
set_view_wview=1392;set_view_hview=736;

/*Initialize Background*/
background_x_offset[0]=background_x[0];background_y_offset[0]=background_y[0];
background_x_offset[1]=background_x[1];background_y_offset[1]=background_y[1];
background_x_offset[2]=background_x[2];background_y_offset[2]=background_y[2];
background_x_offset[3]=background_x[3];background_y_offset[3]=background_y[3];
background_x_offset[4]=background_x[4];background_y_offset[4]=background_y[4];
background_x_offset[5]=background_x[5];background_y_offset[5]=background_y[5];
background_x_offset[6]=background_x[6];background_y_offset[6]=background_y[6];
background_x_offset[7]=background_x[7];background_y_offset[7]=background_y[7];/*Initialize Background End*/

/*HUD Show Controls keys that have been pressed*/
player1_show_controls_timer=0;
player1_show_controls_alpha=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load Level
if!directory_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)){directory_create(working_directory+"\Custom Levels\Level"+string(global.level_editor_level));}/*Create directory for saving custom levels*/

else{
var file, str, str_pos, str_temp, val, num;
file = file_text_open_read(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/Object Placement.txt");
if file != -1
    {

/*    str = file_text_read_string(file);
    file_text_readln(file);
    str_pos = 1;
    num = 0;
    str_temp = "";
    
    while(str_pos &lt; string_length(str))
        {
        while (string_char_at(str, str_pos) != "|")
            {
            str_temp += string_char_at(str, str_pos);
            str_pos += 1;
            }
        val[num] = real(str_temp);
        str_pos += 1;
        num += 1;
        str_temp = "";
        }
*/    
    /*Next objects*/
    
    str = file_text_read_string(file);
    //file_text_readln(file);
    str_temp = "";
    num = 0;
    str_pos = 1;
    
    while(str_pos &lt; string_length(str))
        {
        while (string_char_at(str, str_pos) != "|")
            {
            str_temp += string_char_at(str, str_pos);
            str_pos += 1;
            }
        val[num] = real(str_temp);
        str_temp = "";
        str_pos += 1;
        num += 1;
        if num = 3
            {
            num = 0;
            with(instance_create(val[0], val[1], obj_leveleditor_placed_object))
            {object=val[2];}
            }
        }
    file_text_close(file);
    }}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Deactivate instances outside view*/if quit_level_editor=0 and global.play_edited_level=false{instance_activate_all();instance_deactivate_region(view_xview-128,view_yview-128,view_xview+view_wview+256,view_yview+view_hview+256,false,true);
/*Activate objects that always should be active*/if asset_get_type("obj_level_map_mbb")==asset_object{instance_activate_object(obj_level_map_mbb);}if asset_get_type("obj_level_map_mbf")==asset_object{instance_activate_object(obj_level_map_mbf);}/*Activate objects that always should be active END*/
}else{instance_activate_all();}

/*End Game*/if quit_level_editor=true{

if quit_level_editor=0{
background_index[7]=noone;background_index[6]=noone;background_visible[7]=false;background_visible[6]=false;instance_activate_all();
quit_level_editor=1;
}}
if quit_level_editor&gt;0{quit_level_editor+=1;
background_index[7]=noone;background_index[6]=noone;background_visible[7]=false;background_visible[6]=false;instance_activate_all();

/*Save Thumbnail*/if quit_level_editor=3{
file_delete(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/Automatic Thumbnail.png")
var thumbnail_sprite;
thumbnail_sprite=sprite_create_from_surface(application_surface,0,0,view_wview,view_hview,false,true,0,0);
sprite_save(thumbnail_sprite,0,working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/Automatic Thumbnail.png");
sprite_delete(thumbnail_sprite);}/*Save Thumbnail End*/

/*Save Level*/if quit_level_editor=4{
if!directory_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)){directory_create(working_directory+"\Custom Levels\Level"+string(global.level_editor_level));}/*Create directory for saving custom levels*/
else{instance_activate_all();
var file,str;
/*Open file for writing*/file=file_text_open_write(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/Object Placement.txt");
/*Reset string var*/str="";
/*Write wall objects to file*/with(obj_leveleditor_placed_object){str+=string(x)+"|"+string(y)+"|"+string(object)+"|";}
/*Write string with wall information to file and start a new line*/file_text_write_string(file,str);
file_text_close(file);}/*Save Level END*/

/*Save Level Information*/ini_open(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini");
ini_write_string("Info","level_name",level_name);
if instance_number(obj_level_start)&gt;0{ini_write_real("Info","level_start_x",obj_level_start.x);}
if instance_number(obj_level_start)&gt;0{ini_write_real("Info","level_start_y",obj_level_start.y);}
if instance_number(obj_level_end)&gt;0{ini_write_real("Info","level_end_x",obj_level_end.x);}
if instance_number(obj_level_end)&gt;0{ini_write_real("Info","level_end_y",obj_level_end.y);}
ini_write_real("Info","view_xview",view_xview);
ini_write_real("Info","view_yview",view_yview);
ini_close();}/*Save Level Information END*/


}
if quit_level_editor&gt;5{

/*Save whole level as png file*/
//global.show_tutorial_signs=false;
//if asset_get_type("obj_camera")==asset_object and instance_number(obj_camera)&gt;0{instance_destroy(obj_camera)}
//var custom_level_map_sprite;
//view_xview[0]=0;
//view_yview[0]=0;
//view_wview[0]=room_width;
//view_hview[0]=room_height;
//window_set_rectangle(0,0,room_width,room_height);
//surface_resize(application_surface,room_width,room_height);
//custom_level_map_sprite=sprite_create_from_surface(application_surface,0,0,room_width,room_height,false,false,0,0);
//sprite_save(custom_level_map_sprite,0,working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/Level Map.png");
//sprite_delete(custom_level_map_sprite);/*Save whole level as png file END*/

room_goto(room_title);}/*End Game End*/

/*Activate objects that always should be active*/if asset_get_type("obj_level_map_mbb")==asset_object{instance_activate_object(obj_level_map_mbb);}if asset_get_type("obj_level_map_mbf")==asset_object{instance_activate_object(obj_level_map_mbf);}
if asset_get_type("obj_level_start")==asset_object{instance_activate_object(obj_level_start);}
if asset_get_type("obj_level_end")==asset_object{instance_activate_object(obj_level_end);}/*Activate objects that always should be active END*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD
/*Player 1 Show Controls HUD timer*/
if global.player1_show_controls=0{player1_show_controls_alpha=lerp(player1_show_controls_alpha,0,0.1);}
if global.player1_show_controls&gt;=1 and global.player1_show_controls&lt;=9{
if player1_show_controls_timer&gt;=1{player1_show_controls_alpha=lerp(player1_show_controls_alpha,0,0.1);player1_show_controls_timer-=1;}
if player1_show_controls_timer&lt;=0{player1_show_controls_alpha=lerp(player1_show_controls_alpha,1,0.1);}}
if global.player1_show_controls=10{player1_show_controls_alpha=lerp(player1_show_controls_alpha,1,0.1);}

if(keyboard_check(global.player1_key_up))or(gamepad_button_check(0,gp_padu))or(gamepad_axis_value(0,gp_axislv)&lt;0)
or(keyboard_check(global.player1_key_left))or(gamepad_button_check(0,gp_padl))or(gamepad_axis_value(0,gp_axislh)&lt;0)
or(keyboard_check(global.player1_key_right))or(gamepad_button_check(0,gp_padr))or(gamepad_axis_value(0,gp_axislh)&gt;0)
or(keyboard_check(global.player1_key_down))or(gamepad_button_check(0,gp_padd))or(gamepad_axis_value(0,gp_axislv)&gt;0)
or(gamepad_button_check(0,gp_face1))or(gamepad_button_check(0,gp_face2))or(keyboard_check(global.player1_key_jump))
or(gamepad_button_check(0,gp_face3))or(gamepad_button_check(0,gp_face4))or(keyboard_check(global.player1_key_dash))
or(keyboard_check(vk_space))or(mouse_check_button(mb_any))or(mouse_wheel_down())or(mouse_wheel_up()){player1_show_controls_timer=room_speed*global.player1_show_controls;}/*Player 1 Show Controls HUD timer*/

if global.player1_show_controls&gt;=true and pause=false{
/*Draw Instructions Text*/draw_set_halign(fa_left);draw_set_valign(fa_top);
if gamepad_is_connected(0){draw_text_transformed_colour(16-2,16,"Save &amp; Exit: Start#Play: Select",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(16+2,16,"Save &amp; Exit: Start#Play: Select",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(16,16-2,"Save &amp; Exit: Start#Play: Select",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(16,16+2,"Save &amp; Exit: Start#Play: Select",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(16,16,"Save &amp; Exit: Start#Play: Select",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,player1_show_controls_alpha);}

else{draw_text_transformed_colour(16-2,16,"Save &amp; Exit: Escape#Play: Enter",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(16+2,16,"Save &amp; Exit: Escape#Play: Enter",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(16,16-2,"Save &amp; Exit: Escape#Play: Enter",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(16,16+2,"Save &amp; Exit: Escape#Play: Enter",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(16,16,"Save &amp; Exit: Escape#Play: Enter",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,player1_show_controls_alpha);}/*Draw Instructions Text End*/

draw_set_halign(fa_left);draw_set_valign(fa_center);
/*Show Place Object Key*/
draw_text_transformed_colour(0+30-2,0+set_view_hview+250-32,"Place:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+30+2,0+set_view_hview+250-32,"Place:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+30,0+set_view_hview+250-32-2,"Place:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+30,0+set_view_hview+250-32+2,"Place:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+30,0+set_view_hview+250-32,"Place:",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,player1_show_controls_alpha);
if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,0,0+110,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);}
else{draw_sprite_ext(spr_mouse_buttons,0,0+110,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);}/*Show Place Object End*/

/*Show Erase Object Key*/
draw_text_transformed_colour(0+150-2,0+set_view_hview+250-32,"Erase:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+150+2,0+set_view_hview+250-32,"Erase:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+150,0+set_view_hview+250-32-2,"Erase:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+150,0+set_view_hview+250-32+2,"Erase:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+150,0+set_view_hview+250-32,"Erase:",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,player1_show_controls_alpha);
if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,1,0+230,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);}
else{draw_sprite_ext(spr_mouse_buttons,1,0+230,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);}/*Show Erase Object End*/

/*Show Cycle Item Left Key*/
draw_text_transformed_colour(0+260-2,0+set_view_hview+250-32,"Cycle Item Left:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+260+2,0+set_view_hview+250-32,"Cycle Item Left:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+260,0+set_view_hview+250-32-2,"Cycle Item Left:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+260,0+set_view_hview+250-32+2,"Cycle Item Left:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+260,0+set_view_hview+250-32,"Cycle Item Left:",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,player1_show_controls_alpha);
if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,8,0+440,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);}
else{draw_sprite_ext(spr_mouse_buttons,2,0+440,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);}/*Show Cycle Item Left End*/

/*Show Cycle Item Right Key*/
draw_text_transformed_colour(0+480-2,0+set_view_hview+250-32,"Cycle Item Right:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+480+2,0+set_view_hview+250-32,"Cycle Item Right:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+480,0+set_view_hview+250-32-2,"Cycle Item Right:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+480,0+set_view_hview+250-32+2,"Cycle Item Right:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+480,0+set_view_hview+250-32,"Cycle Item Right:",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,player1_show_controls_alpha);
if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,9,0+670,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);}
else{draw_sprite_ext(spr_mouse_buttons,3,0+670,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);}/*Show Cycle Item Right End*/

/*Show Move Camera Key*/
draw_text_transformed_colour(0+700-2,0+set_view_hview+250-32,"Move Camera:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+700+2,0+set_view_hview+250-32,"Move Camera:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+700,0+set_view_hview+250-32-2,"Move Camera:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+700,0+set_view_hview+250-32+2,"Move Camera:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+700,0+set_view_hview+250-32,"Move Camera:",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,player1_show_controls_alpha);
if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,11,0+860,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);}
else{draw_sprite_ext(spr_mouse_buttons,4,0+860,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);
draw_text_transformed_colour(0+880-2,0+set_view_hview+250-32,"or         +",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+880+2,0+set_view_hview+250-32,"or         +",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+880,0+set_view_hview+250-32-2,"or         +",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+880,0+set_view_hview+250-32+2,"or         +",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,player1_show_controls_alpha);
draw_text_transformed_colour(0+880,0+set_view_hview+250-32,"or         +",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,player1_show_controls_alpha);
draw_sprite_ext(spr_keyboard_keys,vk_space,0+930,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);
draw_sprite_ext(spr_mouse_buttons,0,0+980,0+set_view_hview+250-32,0.5,0.5,0,c_white,player1_show_controls_alpha);
}/*Show Move Camera End*/

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Fullscreen Toggle f4*/if keyboard_check_pressed(vk_f4){if window_get_fullscreen(){window_set_fullscreen(false);}else{window_set_fullscreen(true);}if(file_exists("Config.ini")){file_delete("Config.ini");}ini_open("Config.ini");ini_write_real("Config","fullscreen_mode",window_get_fullscreen());ini_close();}/*Fullscreen Toggle f4 END*/

background_index[0]=custom_background1;/*Update Background1 END*/
background_index[1]=custom_background2;/*Update Background2 END*/
background_index[2]=custom_background3;/*Update Background3 END*/
background_index[3]=custom_background4;/*Update Background4 END*/

/*Activate objects that always should be active*/if asset_get_type("obj_level_map_mbb")==asset_object{instance_activate_object(obj_level_map_mbb);}if asset_get_type("obj_level_map_mbf")==asset_object{instance_activate_object(obj_level_map_mbf);}
if asset_get_type("obj_level_start")==asset_object{instance_activate_object(obj_level_start);}
if asset_get_type("obj_level_end")==asset_object{instance_activate_object(obj_level_end);}/*Activate objects that always should be active END*/

gamepad_set_axis_deadzone(0,0.5);
key_up=(keyboard_check_pressed(global.player1_key_up))and(!keyboard_check_pressed(global.player1_key_down))or(gamepad_button_check_pressed(0,gp_padu))and(!gamepad_button_check_pressed(0,gp_padd))or(gamepad_axis_value(0,gp_axislv)&lt;0);
key_left=(keyboard_check_pressed(global.player1_key_left))and(!keyboard_check_pressed(global.player1_key_right))or(gamepad_button_check_pressed(0,gp_padl))and(!gamepad_button_check_pressed(0,gp_padr))or(gamepad_axis_value(0,gp_axislh)&lt;0);
key_right=(keyboard_check_pressed(global.player1_key_right))and(!keyboard_check_pressed(global.player1_key_left))or(gamepad_button_check_pressed(0,gp_padr))and(!gamepad_button_check_pressed(0,gp_padl))or(gamepad_axis_value(0,gp_axislh)&gt;0);
key_down=(keyboard_check_pressed(global.player1_key_down))and(!keyboard_check_pressed(global.player1_key_up))or(gamepad_button_check_pressed(0,gp_padd))and(!gamepad_button_check_pressed(0,gp_padu))or(gamepad_axis_value(0,gp_axislv)&gt;0);
key_a=(gamepad_button_check_pressed(0,gp_face1))or(keyboard_check_pressed(global.player1_key_jump));
key_a_released=(gamepad_button_check_released(0,gp_face1))or(keyboard_check_released(global.player1_key_jump));
key_a_hold=(gamepad_button_check(0,gp_face1))or(keyboard_check(global.player1_key_jump));
key_b=(gamepad_button_check(0,gp_face2))or(keyboard_check(global.player1_key_dash));
key_b_pressed=(gamepad_button_check_pressed(0,gp_face2))or(keyboard_check_pressed(global.player1_key_dash));
key_b_released=(gamepad_button_check_released(0,gp_face2))or(keyboard_check_released(global.player1_key_dash));

/*List of Placable Objects*/
total_number_of_objects=29;/*This is the total number of objects you have in the list to let the level editor know (0 is counted as object number 1) */
if selected_object=0{place_object=1;sprite_index=spr_wall;mask_index=spr_wall;}
if selected_object=1{place_object=2;sprite_index=spr_spikes;mask_index=spr_wall;}
if selected_object=2{place_object=3;sprite_index=spr_semisolid_platform;mask_index=spr_wall;}
if selected_object=3{place_object=4;sprite_index=spr_brick_block;mask_index=spr_wall;}
if selected_object=4{place_object=9;sprite_index=spr_question_block;mask_index=spr_wall;}
if selected_object=5{place_object=14;sprite_index=spr_hard_block;mask_index=spr_wall;}
if selected_object=6{place_object=15;sprite_index=spr_falling_block;mask_index=spr_wall;}
if selected_object=7{place_object=17;sprite_index=spr_long_falling_block;mask_index=spr_cardboard;}
if selected_object=8{place_object=19;sprite_index=spr_cloud_block;mask_index=spr_wall;}
if selected_object=9{place_object=20;sprite_index=spr_ice_block;mask_index=spr_wall;}
if selected_object=10{place_object=21;sprite_index=spr_cardboard_block;mask_index=spr_wall;}
if selected_object=11{place_object=22;sprite_index=spr_cardboard;mask_index=spr_cardboard;}
if selected_object=12{place_object=23;sprite_index=spr_bump_in_ground;mask_index=spr_wall;}
if selected_object=13{place_object=26;sprite_index=spr_coin;mask_index=spr_wall;}
if selected_object=14{place_object=27;sprite_index=spr_heart;mask_index=spr_wall;}
if selected_object=15{place_object=28;sprite_index=spr_star;mask_index=spr_wall;}
if selected_object=16{place_object=29;sprite_index=spr_1up;mask_index=spr_wall;}
if selected_object=17{place_object=30;sprite_index=spr_enemy;mask_index=spr_wall;}
if selected_object=18{place_object=31;sprite_index=spr_piranha_mouse;mask_index=spr_wall;}
if selected_object=19{place_object=32;sprite_index=spr_blaster;mask_index=spr_wall;}
if selected_object=20{place_object=33;sprite_index=spr_spring;mask_index=spr_wall;}
if selected_object=21{place_object=35;sprite_index=spr_ladder;mask_index=spr_wall;}
if selected_object=22{place_object=36;sprite_index=spr_arrow_sign_right;mask_index=spr_wall;}
if selected_object=23{place_object=44;sprite_index=spr_checkpoint;mask_index=spr_wall;}
if selected_object=24{place_object=45;sprite_index=spr_spikes_emerge_block;mask_index=spr_wall;}
if selected_object=25{place_object=46;sprite_index=spr_oneway;mask_index=spr_oneway;}
if selected_object=26{place_object=47;sprite_index=spr_horizontal_rope;mask_index=spr_wall;}
if selected_object=27{place_object=48;sprite_index=spr_water_surface;mask_index=spr_wall;}
if selected_object=28{place_object=49;sprite_index=spr_clipped_shirt;mask_index=spr_wall;}
if selected_object=29{place_object=52;sprite_index=spr_bucket;mask_index=spr_wall;}
/*List of Placable Objects End*/

depth=-room_height-999999999;
/*Room Speed*/room_speed=global.max_fps;/*Room Speed END*/
image_speed=0;image_index=0;

/*Select Object Menu*/
if mouse_check_button(mb_any)or keyboard_check(vk_anykey)or key_a_hold{selected_menu_alpha=lerp(selected_menu_alpha,0,0.1);}else{selected_menu_alpha=lerp(selected_menu_alpha,0,0.01);}
if visible=true and quit_level_editor=0{
draw_set_alpha(selected_menu_alpha);draw_rectangle_colour(0,0,room_width,view_yview+128,c_black,c_black,c_black,c_black,false);
draw_sprite_ext(spr_wall,0,view_xview+view_wview/2+selected_object_menu_x,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_spikes,0,view_xview+view_wview/2+selected_object_menu_x+64,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_semisolid_platform,0,view_xview+view_wview/2+selected_object_menu_x+64*2,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_brick_block,0,view_xview+view_wview/2+selected_object_menu_x+64*3,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_question_block,0,view_xview+view_wview/2+selected_object_menu_x+64*4,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_hard_block,0,view_xview+view_wview/2+selected_object_menu_x+64*5,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_falling_block,0,view_xview+view_wview/2+selected_object_menu_x+64*6,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_long_falling_block,0,view_xview+view_wview/2+selected_object_menu_x+64*7,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_cloud_block,0,view_xview+view_wview/2+selected_object_menu_x+64*8,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_ice_block,0,view_xview+view_wview/2+selected_object_menu_x+64*9,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_cardboard_block,0,view_xview+view_wview/2+selected_object_menu_x+64*10,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_cardboard,0,view_xview+view_wview/2+selected_object_menu_x+64*11,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_bump_in_ground,0,view_xview+view_wview/2+selected_object_menu_x+64*12,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_coin,0,view_xview+view_wview/2+selected_object_menu_x+64*13,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_heart,0,view_xview+view_wview/2+selected_object_menu_x+64*14,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_star,0,view_xview+view_wview/2+selected_object_menu_x+64*15,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_1up,0,view_xview+view_wview/2+selected_object_menu_x+64*16,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_enemy,0,view_xview+view_wview/2+selected_object_menu_x+64*17,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_piranha_mouse,0,view_xview+view_wview/2+selected_object_menu_x+64*18,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_blaster,0,view_xview+view_wview/2+selected_object_menu_x+64*19,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_spring,0,view_xview+view_wview/2+selected_object_menu_x+64*20,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_ladder,0,view_xview+view_wview/2+selected_object_menu_x+64*21,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_arrow_sign_right,0,view_xview+view_wview/2+selected_object_menu_x+64*22,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_checkpoint,0,view_xview+view_wview/2+selected_object_menu_x+64*23,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_spikes_emerge_block,0,view_xview+view_wview/2+selected_object_menu_x+64*24,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_oneway,0,view_xview+view_wview/2+selected_object_menu_x+64*25,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_horizontal_rope,0,view_xview+view_wview/2+selected_object_menu_x+64*26,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_water_surface,0,view_xview+view_wview/2+selected_object_menu_x+64*27,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_clipped_shirt,0,view_xview+view_wview/2+selected_object_menu_x+64*28,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_sprite_ext(spr_bucket,0,view_xview+view_wview/2+selected_object_menu_x+64*29,view_yview+64,1,1,0,c_white,selected_menu_alpha);
draw_set_color(c_black);draw_arrow(view_xview+view_wview/2,view_yview+16-8,view_xview+view_wview/2,view_yview+16+8,40);
draw_set_color(c_white);draw_arrow(view_xview+view_wview/2,view_yview+16-8,view_xview+view_wview/2,view_yview+16+8,30);
draw_set_color(c_black);draw_arrow(view_xview+view_wview/2,view_yview+128-16+8,view_xview+view_wview/2,view_yview+128-16-8,40);
draw_set_color(c_white);draw_arrow(view_xview+view_wview/2,view_yview+128-16+8,view_xview+view_wview/2,view_yview+128-16-8,30);
draw_set_alpha(1);}/*Select Object Menu End*/

/*Position the Cursor*/
/*Draw Cursor*/
if visible=true and quit_level_editor=0{

/*Controller Input Changes*/if use_controller=false{
x=mouse_x;y=mouse_y;
cursor_x=mouse_x;cursor_y=mouse_y;
/*Change control type to gamepad if using a gamepad*/if(gamepad_axis_value(0,gp_axislh)&lt;0)or(gamepad_axis_value(0,gp_axislh)&gt;0)or(gamepad_axis_value(0,gp_axislv)&lt;0)or(gamepad_axis_value(0,gp_axislv)&gt;0)
or (gamepad_axis_value(0,gp_axisrh)&lt;0)or(gamepad_axis_value(0,gp_axisrh)&gt;0)or(gamepad_axis_value(0,gp_axisrv)&lt;0)or(gamepad_axis_value(0,gp_axisrv)&gt;0)
or gamepad_button_check(0,gp_face1)or gamepad_button_check(0,gp_face2)or gamepad_button_check(0,gp_face3)or gamepad_button_check(0,gp_face4)or gamepad_button_check(0,gp_padd)or gamepad_button_check(0,gp_padl)or gamepad_button_check(0,gp_padr)or gamepad_button_check(0,gp_padu)or gamepad_button_check(0,gp_select)or gamepad_button_check(0,gp_shoulderl)or gamepad_button_check(0,gp_shoulderlb)or gamepad_button_check(0,gp_shoulderr)or gamepad_button_check(0,gp_shoulderrb)or gamepad_button_check(0,gp_start)or gamepad_button_check(0,gp_stickl)or gamepad_button_check(0,gp_stickr){controller_x=mouse_x;controller_y=mouse_y;use_controller=true;}/*Change control type to gamepad if using a gamepad END*/}
else if use_controller=true{
/*Change control type to keyboard and mouse if using a keyboard or mouse*/if keyboard_check(vk_anykey)or mouse_check_button(mb_any)or mouse_wheel_down()or mouse_wheel_up(){use_controller=false;}/*Change control type to keyboard and mouse if using a keyboard or mouse END*/
if key_up and controller_y&gt;view_yview{if gamepad_button_check(0,gp_face3)or gamepad_button_check(0,gp_face4)or gamepad_button_check(0,gp_face4){controller_y-=8;}else{controller_y-=4;}}if key_down and controller_y&lt;view_yview+view_hview{if gamepad_button_check(0,gp_face3)or gamepad_button_check(0,gp_face4){controller_y+=8;}else{controller_y+=4;}}
if key_left and controller_x&gt;view_xview{if gamepad_button_check(0,gp_face3)or gamepad_button_check(0,gp_face4){controller_x-=8;}else{controller_x-=4;}}if key_right and controller_x&lt;view_xview+view_wview{if gamepad_button_check(0,gp_face3)or gamepad_button_check(0,gp_face4){controller_x+=8;}else{controller_x+=4;}}
/*Move view with gamepad*/
if gamepad_axis_value(0,gp_axisrv)&lt;0{if gamepad_button_check(0,gp_face3)or gamepad_button_check(0,gp_face4){view_yview-=16;if controller_y&gt;view_yview{controller_y-=16;}}else{view_yview-=8;if controller_y&gt;view_yview{controller_y-=8;}}}
if gamepad_axis_value(0,gp_axisrv)&gt;0{if gamepad_button_check(0,gp_face3)or gamepad_button_check(0,gp_face4){view_yview+=16;if controller_y&lt;view_yview+view_hview{controller_y+=16;}}else{view_yview+=8;if controller_y&lt;view_yview+view_hview{controller_y+=8;}}}
if gamepad_axis_value(0,gp_axisrh)&lt;0{if gamepad_button_check(0,gp_face3)or gamepad_button_check(0,gp_face4){view_xview-=16;if controller_x&gt;view_xview{controller_x-=16;}}else{view_xview-=8;if controller_x&gt;view_xview{controller_x-=8;}}}
if gamepad_axis_value(0,gp_axisrh)&gt;0{if gamepad_button_check(0,gp_face3)or gamepad_button_check(0,gp_face4){view_xview+=16;if controller_x&lt;view_xview+view_wview{controller_x+=16;}}else{view_xview+=8;if controller_x&lt;view_xview+view_wview{controller_x+=8;}}}/*Move view with gamepad END*/
x=controller_x;y=controller_y;
cursor_x=controller_x;cursor_y=controller_y;}/*Controller Input Changes END*/

/*Make sure to always move snap*/move_snap(32,32);/*Make sure to always move snap END*/
/*Scroll Cursor*/
if(keyboard_check(vk_space))and(mouse_check_button(mb_left))or(mouse_check_button(mb_middle)){draw_sprite_ext(spr_cursor_scroll,image_index,cursor_x,cursor_y,1.1,1.1,0,c_red,0.5);}
else if(keyboard_check(vk_space)){draw_sprite_ext(spr_cursor_scroll,image_index,cursor_x,cursor_y,1.1,1.1,0,c_white,0.5);}
/*Drag Cursor*/else if place_meeting(x,y,obj_leveleditor_placed_object)and drag_object=false and erase_mode=false{if!(mouse_check_button(mb_left))or!key_a_hold{draw_sprite_ext(spr_cursor_grab,0,cursor_x,cursor_y,1.1,1.1,0,c_white,0.5);}}
else if place_meeting(x,y,obj_leveleditor_placed_object)and drag_object=true{draw_sprite_ext(spr_cursor_grab,1,cursor_x,cursor_y,1.1,1.1,0,c_white,0.5);}
/*Erase Cursor*/else if erase_mode=true{
if key_a or key_b or(mouse_check_button(mb_left))or(mouse_check_button(mb_right)){draw_set_alpha(0.5);draw_rectangle_colour(x-16,y-16,x+16,y+16,c_red,c_red,c_red,c_red,false);draw_set_alpha(1);draw_sprite_ext(spr_cursor_erase,image_index,cursor_x,cursor_y,1.1,1.1,90,c_white,0.5);}
else{draw_set_alpha(0.5);draw_rectangle_colour(x-16,y-16,x+16,y+16,c_red,c_red,c_red,c_red,false);draw_set_alpha(1);draw_sprite_ext(spr_cursor_erase,image_index,cursor_x,cursor_y,1.1,1.1,0,c_white,0.5);}}/*Erase Cursor END*/
/*Default Cursor*/else{
if!place_meeting(x,y,obj_leveleditor_placed_object)and!place_meeting(x,y,obj_level_start)and!place_meeting(x,y,obj_level_end){if drag_object=false{draw_sprite_ext(sprite_index,image_index,x,y,1.1,1.1,0,c_red,0.2);draw_sprite_ext(sprite_index,image_index,x,y,1,1,0,c_white,0.2);}}
else{if drag_object=false{draw_sprite_ext(sprite_index,image_index,x,y,1.1,1.1,0,c_red,0.1);draw_sprite_ext(sprite_index,image_index,x,y,1,1,0,c_white,0.1);}}
draw_sprite_ext(spr_cursor,image_index,cursor_x,cursor_y,1.1,1.1,0,c_white,0.5);}

}/*Position the Cursor End*/


/*Change modes*/
if key_b_pressed or(mouse_check_button_pressed(mb_right)){if pause=false and menu_delay=0{erase_mode=true;}}
if key_b_released or(mouse_check_button_released(mb_right)){if pause=false and menu_delay=0{erase_mode=false;}}
/*Change modes END*/

if quit_level_editor=0{
/*Place Object*/if mouse_check_button(mb_left)and!keyboard_check(vk_space)and!(mouse_check_button(mb_middle))or key_a_hold{if!mouse_check_button(mb_right)and!key_b{if drag_object=false and erase_mode=false and pause=false and menu_delay=0{
if x&lt;view_xview+view_wview+32 and x&gt;view_xview-32 and y&lt;view_yview+view_hview+32 and y&gt;view_yview-32{
if!place_meeting(x,y,obj_leveleditor_placed_object){if asset_get_type("snd_leveleditor_place_object")==asset_sound{audio_play_sound(snd_leveleditor_place_object,0,0);audio_sound_gain(snd_leveleditor_place_object,global.sfx_volume,0);}
obj=instance_create(x,y,obj_leveleditor_placed_object);obj.object=obj_leveleditor.place_object;

/*Reset Level Editor Checkpoint*/
if asset_get_type("room_leveleditor")==asset_room and room=room_leveleditor{
if!directory_exists(working_directory+"\Custom Levels"){directory_create(working_directory+"\Custom Levels");}/*Create directory for saving custom levels*/
ini_open(working_directory+"\Custom Levels\CustomLevelSavefile.ini");

ini_key_delete("Level"+string(global.level_editor_level),"x_checkpoint");
ini_key_delete("Level"+string(global.level_editor_level),"y_checkpoint");
ini_key_delete("Level"+string(global.level_editor_level),"checkpoint_millisecond");
ini_key_delete("Level"+string(global.level_editor_level),"checkpoint_second");
ini_key_delete("Level"+string(global.level_editor_level),"checkpoint_minute");
ini_key_delete("Level"+string(global.level_editor_level),"checkpoint_realmillisecond");
ini_close();}/*Reset Level Editor Checkpoint END*/

}}}}}/*Place Object End*/

/*SELECT WHAT OBJECT TO PLACE*/
/*Scroll Objects Left*/if mouse_wheel_up()and!mouse_check_button(mb_middle)and pause=false or gamepad_button_check_pressed(0,gp_shoulderl)and pause=false{if asset_get_type("snd_leveleditor_cycle_item_left")==asset_sound{audio_play_sound(snd_leveleditor_cycle_item_left,0,0);audio_sound_gain(snd_leveleditor_cycle_item_left,global.sfx_volume,0);}if selected_object&gt;0{selected_object-=1;selected_object_menu_x+=64;}else{selected_object=total_number_of_objects;selected_object_menu_x=-64*total_number_of_objects;}selected_menu_alpha=2;}/*Scroll Objects Left End*/
/*Scroll Objects Right*/if mouse_wheel_down()and!mouse_check_button(mb_middle)and pause=false or gamepad_button_check_pressed(0,gp_shoulderr)and pause=false{if asset_get_type("snd_leveleditor_cycle_item_right")==asset_sound{audio_play_sound(snd_leveleditor_cycle_item_right,0,0);audio_sound_gain(snd_leveleditor_cycle_item_right,global.sfx_volume,0);}if selected_object&lt;total_number_of_objects{selected_object+=1;selected_object_menu_x-=64;}else{selected_object=0;selected_object_menu_x=0;}selected_menu_alpha=2;}/*Scroll Objects Right End*/
/*SELECT WHAT OBJECT TO PLACE END*/

/*Zoom In and Out*/
//if keyboard_check(vk_add)and pause=false{if view_wview&gt;1392/2 and view_hview&gt;736/2{view_wview-=32;view_hview-=32;}}
//if keyboard_check(vk_subtract)and pause=false{if view_wview&lt;room_width and view_hview&lt;room_height{view_wview+=32;view_hview+=32;}}/*Zoom In and Out End*/

/*Play Level*/if keyboard_check_pressed(vk_enter)or gamepad_button_check_pressed(0,gp_select){if pause=false{
/*Save Level*/
if!directory_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)){directory_create(working_directory+"\Custom Levels\Level"+string(global.level_editor_level));}/*Create directory for saving custom levels*/
else{instance_activate_all();
var file,str;
/*Open file for writing*/file=file_text_open_write(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/Object Placement.txt");
/*Reset string var*/str="";
/*Write wall objects to file*/with(obj_leveleditor_placed_object){str+=string(x)+"|"+string(y)+"|"+string(object)+"|";}
/*Write string with wall information to file and start a new line*/file_text_write_string(file,str);
file_text_close(file);}

/*Save Level Information*/
ini_open(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini");
if instance_number(obj_level_start)&gt;0{ini_write_real("Info","level_start_x",obj_level_start.x);}
if instance_number(obj_level_start)&gt;0{ini_write_real("Info","level_start_y",obj_level_start.y);}
if instance_number(obj_level_end)&gt;0{ini_write_real("Info","level_end_x",obj_level_end.x);}
if instance_number(obj_level_end)&gt;0{ini_write_real("Info","level_end_y",obj_level_end.y);}
ini_write_real("Info","view_xview",view_xview);
ini_write_real("Info","view_yview",view_yview);
ini_close();/*Save Level Information END*/
/*Save Level END*/

instance_activate_all();global.lives_until_assist=0;
global.play_edited_level=true;background_visible[6]=false;
if asset_get_type("obj_camera")==asset_object and instance_number(obj_camera)&lt;=0{instance_create(x,y,obj_camera);}
instance_destroy();}}/*Play Level End*/

/*Scroll View*/
if(mouse_check_button_pressed(mb_left))and(keyboard_check(vk_space))or(mouse_check_button_pressed(mb_middle)){if pause=false{drag_x=mouse_x;drag_y=mouse_y;}}
if(mouse_check_button(mb_left))and(keyboard_check(vk_space))or(mouse_check_button(mb_middle)){if pause=false{
view_xview=drag_x-(mouse_x-view_xview);
view_yview=drag_y-(mouse_y-view_yview);}}
/*Scroll View End*/
}

/*Limit so cursor and view can't go outside room*/
/*Limit controller x and controller y inside room*/
if controller_x&lt;view_xview{controller_x=view_xview;}
if controller_x&gt;view_xview+view_wview{controller_x=view_xview+view_wview;}
if controller_y&lt;view_yview{controller_y=view_yview;}
if controller_y&gt;view_yview+view_hview{controller_y=view_yview+view_hview;}/*Limit controller x and controller y inside room END*/

/*Limit x and y inside room*/
if x&lt;view_xview{x=view_xview;}
if x&gt;view_xview+view_wview{x=view_xview+view_wview;}
if y&lt;view_yview{y=view_yview;}
if y&gt;view_yview+view_hview{y=view_yview+view_hview;}/*Limit x and y inside room END*/

/*Limit view inside room*/
view_xview=max(0,min(view_xview,room_width-view_wview));
view_yview=max(0,min(view_yview,room_height-view_hview));/*Limit view inside room END*/
/*Limit so view and cursor can't go outside room END*/

/*Parallax Scrolling Background*/
background_x[0]=background_x_offset[0]+view_xview/3;background_y[0]=background_y_offset[0]+view_yview/3;
background_x[1]=background_x_offset[1]+view_xview/5;background_y[1]=background_y_offset[1]+view_yview/5;
background_x[2]=background_x_offset[2]+view_xview/7;background_y[2]=background_y_offset[2]+view_yview/7;
background_x[3]=background_x_offset[3]+view_xview/9;background_y[3]=background_y_offset[3]+view_yview/9;
/*Parallax Scrolling Background End*/

/*Background Brightness Options*/
if quit_level_editor&lt;=0{
if global.background_brightness&lt;0{if asset_get_type("background_black")==asset_background{background_index[7]=background_black;background_visible[7]=true;background_alpha[7]=abs(global.background_brightness);background_foreground[7]=false;background_htiled[7]=true;background_vtiled[7]=true;}}
if global.background_brightness&gt;0{if asset_get_type("background_white")==asset_background{background_index[7]=background_white;background_visible[7]=true;background_alpha[7]=abs(global.background_brightness);background_foreground[7]=false;background_htiled[7]=true;background_vtiled[7]=true;}}}

/*Pause Menu*/
if pause=false{
if keyboard_check_pressed(vk_escape)or gamepad_button_check_pressed(0,gp_start){quit_level_editor=false;can_input_level_name=false;pause=true;menu="continue";}}
else if pause=true and quit_level_editor&lt;=0{
/*Make Background Darker*/draw_set_alpha(0.9);draw_rectangle_colour(0,0,room_width,room_height,c_black,c_black,c_black,c_black,false);draw_set_alpha(1);/*Make Background Darker END*/
draw_set_halign(fa_center);draw_set_valign(fa_center);
if keyboard_check_pressed(vk_escape)or gamepad_button_check_pressed(0,gp_start){quit_level_editor=false;can_input_level_name=false;pause=false;can_navigate=false;}
if menu="continue"and can_input_level_name=false{draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2,"&gt; Continue &lt;#Options#Save and Quit#Enter Level Name",global.default_text_size*2,global.default_text_size*2,0,c_white,c_white,c_white,c_white,1);if(keyboard_check_pressed(global.player1_key_up))and(!keyboard_check_pressed(global.player1_key_down))or(gamepad_button_check_pressed(0,gp_padu))and(!gamepad_button_check_pressed(0,gp_padd))or(gamepad_axis_value(0,gp_axislv)&lt;0)and menu_joystick_delay=0{if menu_delay=0{menu_delay=10;menu="enter_level_name";}}else if(keyboard_check_pressed(global.player1_key_down))and(!keyboard_check_pressed(global.player1_key_up))or(gamepad_button_check_pressed(0,gp_padd))and(!gamepad_button_check_pressed(0,gp_padu))or(gamepad_axis_value(0,gp_axislv)&gt;0)and menu_joystick_delay=0{if menu_delay=0{menu_delay=10;menu="options";}}if key_a or keyboard_check_pressed(vk_enter){if menu_delay=0{menu_delay=10;quit_level_editor=false;can_input_level_name=false;pause=false;}}if key_b_pressed{if menu_delay=0{menu_delay=10;quit_level_editor=false;can_input_level_name=false;pause=false;can_navigate=false;}}}
else if menu="options"and can_input_level_name=false{draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2,"Continue#&gt; Options &lt;#Save and Quit#Enter Level Name",global.default_text_size*2,global.default_text_size*2,0,c_white,c_white,c_white,c_white,1);if(keyboard_check_pressed(global.player1_key_up))and(!keyboard_check_pressed(global.player1_key_down))or(gamepad_button_check_pressed(0,gp_padu))and(!gamepad_button_check_pressed(0,gp_padd))or(gamepad_axis_value(0,gp_axislv)&lt;0)and menu_joystick_delay=0{if menu_delay=0{menu_delay=10;menu="continue";}}else if(keyboard_check_pressed(global.player1_key_down))and(!keyboard_check_pressed(global.player1_key_up))or(gamepad_button_check_pressed(0,gp_padd))and(!gamepad_button_check_pressed(0,gp_padu))or(gamepad_axis_value(0,gp_axislv)&gt;0)and menu_joystick_delay=0{if menu_delay=0{menu_delay=10;menu="quit";}}if key_a or keyboard_check_pressed(vk_enter){if menu_delay=0{menu_delay=10;quit_level_editor=false;can_input_level_name=false;menu="gameplay_settings";pause=true;can_navigate=true;}}if key_b_pressed{if menu_delay=0{menu_delay=10;quit_level_editor=false;can_input_level_name=false;pause=false;can_navigate=false;}}}
else if menu="quit"and can_input_level_name=false{draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2,"Continue#Options#&gt; Save and Quit &lt;#Enter Level Name",global.default_text_size*2,global.default_text_size*2,0,c_white,c_white,c_white,c_white,1);if(keyboard_check_pressed(global.player1_key_up))and(!keyboard_check_pressed(global.player1_key_down))or(gamepad_button_check_pressed(0,gp_padu))and(!gamepad_button_check_pressed(0,gp_padd))or(gamepad_axis_value(0,gp_axislv)&lt;0)and menu_joystick_delay=0{if menu_delay=0{menu_delay=10;menu="options";}}else if(keyboard_check_pressed(global.player1_key_down))and(!keyboard_check_pressed(global.player1_key_up))or(gamepad_button_check_pressed(0,gp_padd))and(!gamepad_button_check_pressed(0,gp_padu))or(gamepad_axis_value(0,gp_axislv)&gt;0)and menu_joystick_delay=0{menu="enter_level_name";}if key_a or keyboard_check_pressed(vk_enter){if menu_delay=0{menu_delay=10;quit_level_editor=true;can_input_level_name=false;pause=false;}}if key_b_pressed{if menu_delay=0{menu_delay=10;quit_level_editor=false;can_input_level_name=false;pause=false;can_navigate=false;}}}
else if menu="enter_level_name"and can_input_level_name=false{draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2,"Continue#Options#Save and Quit#&gt; Enter Level Name &lt;",global.default_text_size*2,global.default_text_size*2,0,c_white,c_white,c_white,c_white,1);if(keyboard_check_pressed(global.player1_key_up))and(!keyboard_check_pressed(global.player1_key_down))or(gamepad_button_check_pressed(0,gp_padu))and(!gamepad_button_check_pressed(0,gp_padd))or(gamepad_axis_value(0,gp_axislv)&lt;0)and menu_joystick_delay=0{if menu_delay=0{menu_delay=10;menu="quit";}}else if(keyboard_check_pressed(global.player1_key_down))and(!keyboard_check_pressed(global.player1_key_up))or(gamepad_button_check_pressed(0,gp_padd))and(!gamepad_button_check_pressed(0,gp_padu))or(gamepad_axis_value(0,gp_axislv)&gt;0)and menu_joystick_delay=0{if menu_delay=0{menu_delay=10;menu="continue";}}if key_a or keyboard_check_pressed(vk_enter){if menu_delay=0{menu_delay=10;quit_level_editor=false;can_input_level_name=true;pause=true;menu="input_level_name";

/*Load Level Information*/
if(file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini")){
ini_open(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini");
if(ini_key_exists("Info","level_name")){level_name=ini_read_string("Info","level_name",0);}else{level_name="";}
ini_close();}else{level_name="";}/*Load Level Information END*/

keyboard_string=string(level_name);

/*Load Level Name*/
if(file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini")){
ini_open(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini");
if(ini_key_exists("Info","level_name")){level_name=ini_read_string("Info","level_name",0);}
ini_close();}/*Load Level Name END*/
}}
if key_b_pressed{if menu_delay=0{menu_delay=10;quit_level_editor=false;can_input_level_name=false;pause=false;can_navigate=false;}}}

/*Level Name Input*/
/*PLAYER 1 INPUT NAME NOW*/if menu="input_level_name" and can_input_level_name=true{
/*Press enter when done typing*/if keyboard_check_pressed(vk_enter)or gamepad_button_check_pressed(0,gp_start){if menu_delay=0{

menu_delay=10;can_input_level_name=false;quit_level_editor=false;pause=true;menu="enter_level_name";}}/*Press enter when done typing END*/
draw_set_halign(fa_left);draw_set_valign(fa_center);
/*Inputed Name Text*/if name_enter_blink&lt;1{draw_text_transformed_colour(view_xview+view_wview/2-200-2,view_yview+view_hview/2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name)+"|",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2-200+2,view_yview+view_hview/2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name)+"|",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2-200,view_yview+view_hview/2-2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name)+"|",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2-200,view_yview+view_hview/2+2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name)+"|",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2-200,view_yview+view_hview/2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name)+"|",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);}
else{draw_text_transformed_colour(view_xview+view_wview/2-200-2,view_yview+view_hview/2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name),global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2-200+2,view_yview+view_hview/2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name),global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2-200,view_yview+view_hview/2-2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name),global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2-200,view_yview+view_hview/2+2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name),global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2-200,view_yview+view_hview/2,"Type a name on the keyboard for level name#Press Enter when done typing# #Level Name: "+string(level_name),global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);}/*Inputed Name Text END*/
/*Limit Name Input Length for Level Name*/draw_set_halign(fa_center);draw_set_valign(fa_center);
draw_text_transformed_colour(view_xview+view_wview/2-2,view_yview+view_hview/2+100,"Limit: "+string(string_length(level_name))+"/32",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2+2,view_yview+view_hview/2+100,"Limit: "+string(string_length(level_name))+"/32",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2+100-2,"Limit: "+string(string_length(level_name))+"/32",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2+100+2,"Limit: "+string(string_length(level_name))+"/32",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2+100,"Limit: "+string(string_length(level_name))+"/32",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);
level_name=keyboard_string;
/*Limit Name Input Length for Level Name*/if string_length(level_name)&gt;32{keyboard_string=string_copy(level_name,1,32);}/*Limit Name Input Length for Level Name END*/
name_enter_blink+=0.05;if name_enter_blink&gt;1.5{name_enter_blink=0;}}/*PLAYER 1 INPUT NAME NOW END*/
}/*Pause Menu END*/

/*Options*/scr_options_menu();/*Options END*/

/*Menu Navigation Delay*/if menu_delay&gt;0{menu_delay-=1;}if menu_delay&lt;0{menu_delay=0;}/*Menu Navigation Delay END*/

/*Menu navigation with joystick*/
if(gamepad_axis_value(0,gp_axislv)&lt;0)or(gamepad_axis_value(0,gp_axislv)&gt;0)or(gamepad_axis_value(0,gp_axislh)&lt;0)or(gamepad_axis_value(0,gp_axislh)&gt;0)
or(gamepad_axis_value(1,gp_axislv)&lt;0)or(gamepad_axis_value(1,gp_axislv)&gt;0)or(gamepad_axis_value(1,gp_axislh)&lt;0)or(gamepad_axis_value(1,gp_axislh)&gt;0)
or(gamepad_axis_value(2,gp_axislv)&lt;0)or(gamepad_axis_value(2,gp_axislv)&gt;0)or(gamepad_axis_value(2,gp_axislh)&lt;0)or(gamepad_axis_value(2,gp_axislh)&gt;0)
or(gamepad_axis_value(3,gp_axislv)&lt;0)or(gamepad_axis_value(3,gp_axislv)&gt;0)or(gamepad_axis_value(3,gp_axislh)&lt;0)or(gamepad_axis_value(3,gp_axislh)&gt;0){if menu_joystick_delay=0{menu_joystick_delay=15;}}
if(gamepad_axis_value(0,gp_axislv)=0)and(gamepad_axis_value(0,gp_axislh)=0)
and(gamepad_axis_value(1,gp_axislv)=0)and(gamepad_axis_value(1,gp_axislh)=0)
and(gamepad_axis_value(2,gp_axislv)=0)and(gamepad_axis_value(2,gp_axislh)=0)
and(gamepad_axis_value(3,gp_axislv)=0)and(gamepad_axis_value(3,gp_axislh)=0){menu_joystick_delay=0;}
if menu_joystick_delay&gt;0{menu_joystick_delay-=1;}/*Menu navigation with joystick END*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
