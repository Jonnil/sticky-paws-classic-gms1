<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_level_start</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if global.actually_play_edited_level=true{global.play_edited_level=true;background_visible[6]=false;if asset_get_type("obj_camera")==asset_object and instance_number(obj_camera)&lt;=0{instance_create(x-64,y-64,obj_camera);}}

drag_object=false;
drag_release_timer=0;
image_speed=0.25;

if(file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini")){
ini_open(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"/level_information.ini");

if(ini_key_exists("Info","level_start_x")){x=ini_read_real("Info","level_start_x",0);}
if(ini_key_exists("Info","level_start_y")){y=ini_read_real("Info","level_start_y",0);}
ini_close();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_a=(gamepad_button_check(0,gp_face1))or(keyboard_check(global.player1_key_jump));
key_a_pressed=(gamepad_button_check_pressed(0,gp_face1))or(keyboard_check_pressed(global.player1_key_jump));
key_a_released=(gamepad_button_check_released(0,gp_face1))or(keyboard_check_released(global.player1_key_jump));
key_b=(gamepad_button_check(0,gp_face2))or(keyboard_check(global.player1_key_dash));
draw_self();

/*Drag Object*/if asset_get_type("obj_leveleditor")==asset_object and instance_number(obj_leveleditor)&gt;0 and obj_leveleditor.pause=false{if!(keyboard_check(vk_space))and!(mouse_check_button(mb_middle)){if mouse_check_button_pressed(mb_left)or key_a_pressed{if position_meeting(obj_leveleditor.x,obj_leveleditor.y,id){if drag_object&lt;true{drag_object=true;obj_leveleditor.drag_object=true;}}}}/*Drag the object*/if drag_object=true{x=obj_leveleditor.x;y=obj_leveleditor.y;}/*Drag the object END*//*Release the object*/if mouse_check_button_released(mb_left)or key_a_released{if drag_object=true{drag_release_timer=3;drag_object=0.5;obj_leveleditor.drag_object=false;}}}/*Release the object END*//*Drag Object END*/
if drag_release_timer&gt;0{drag_release_timer-=1;}else{if drag_object=0.5{drag_object=false;move_snap(32,32);}}

/*Make sure the level end isn't outside of the level, this code has to be after the drag object code*/if instance_number(obj_level_end)&gt;0{if x&gt;obj_level_end.x-32{x=obj_level_end.x-32;}}
if x&lt;0+sprite_width-32{x=0+sprite_width-32}if x&gt;room_width{x=room_width;}if y&lt;64{y=64}if y&gt;room_height{y=room_height;}/*Make sure the level end isn't outside of the level, this code has to be after the drag object code END*/

if global.play_edited_level=true or global.actually_play_edited_level=true{
instance_create(x,y,obj_ground);
instance_create(x-32,y,obj_ground);
instance_create(x-64,y,obj_ground);
instance_create(x-96,y,obj_ground);
instance_create(x-128,y,obj_ground);
instance_create(x-160,y,obj_ground);
instance_create(x-192,y,obj_ground);
if global.actually_play_edited_level=true{global.play_edited_level=true;background_visible[6]=false;view_xview=x-view_wview/2;view_yview=y-view_hview/2;
if asset_get_type("obj_camera")==asset_object and instance_number(obj_camera)&lt;=0{

/*Load Checkpoint*/if(file_exists(working_directory+"\Custom Levels\CustomLevelSavefile.ini")){
ini_open(working_directory+"\Custom Levels\CustomLevelSavefile.ini");

if(ini_key_exists("Level"+string(global.level_editor_level),"x_checkpoint")){global.x_chekpoint=ini_read_real("Level"+string(global.level_editor_level),"x_checkpoint",0);}
if(ini_key_exists("Level"+string(global.level_editor_level),"y_checkpoint")){global.y_checkpoint=ini_read_real("Level"+string(global.level_editor_level),"y_checkpoint",0);}
if(ini_key_exists("Level"+string(global.level_editor_level),"checkpoint_millisecond")){global.checkpoint_millisecond=ini_read_real("Level"+string(global.level_editor_level),"checkpoint_millisecond",0);}
if(ini_key_exists("Level"+string(global.level_editor_level),"checkpoint_second")){global.checkpoint_second=ini_read_real("Level"+string(global.level_editor_level),"checkpoint_second",0);}
if(ini_key_exists("Level"+string(global.level_editor_level),"checkpoint_minute")){global.checkpoint_minute=ini_read_real("Level"+string(global.level_editor_level),"checkpoint_minute",0);}
if(ini_key_exists("Level"+string(global.level_editor_level),"checkpoint_realmillisecond")){global.checkpoint_realmillisecond=ini_read_real("Level"+string(global.level_editor_level),"checkpoint_realmillisecond",0);}

if global.x_checkpoint&gt;0 or global.y_checkpoint&gt;0{view_xview=global.x_checkpoint-view_wview/2;view_yview=global.y_checkpoint-view_hview/2;
instance_create(global.x_checkpoint,global.y_checkpoint,obj_camera);}else{instance_create(x-64,y-64,obj_camera);}
}else/*Load Checkpoint END*/
{instance_create(x-64,y-64,obj_camera);}}}
instance_destroy();}

depth=-room_height*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
