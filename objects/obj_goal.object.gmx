<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index=0;image_speed=0;
trigger_ending=false;
trigger_demo_ending=false;
goal=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if goal=false{
image_index=1;
if trigger_ending=true{global.trigger_ending=true;}
/*Stop Music*/audio_stop_sound(global.music);audio_stop_sound(global.music_underwater);global.music=noone;global.music_underwater=noone;/*Stop Music END*/
if global.demo=true and asset_get_type("room_level1")==asset_room and room=room_level1 and global.demo_max_levels&gt;=1
or global.demo=true and asset_get_type("room_level2")==asset_room and room=room_level2 and global.demo_max_levels&gt;=2
or global.demo=true and asset_get_type("room_level3")==asset_room and room=room_level3 and global.demo_max_levels&gt;=3
or global.demo=true and asset_get_type("room_level4")==asset_room and room=room_level4 and global.demo_max_levels&gt;=4
or global.demo=true and asset_get_type("room_level5")==asset_room and room=room_level5 and global.demo_max_levels&gt;=5
or global.demo=true and asset_get_type("room_level6")==asset_room and room=room_level6 and global.demo_max_levels&gt;=6
or global.demo=true and asset_get_type("room_level7")==asset_room and room=room_level7 and global.demo_max_levels&gt;=7
or global.demo=true and asset_get_type("room_level8")==asset_room and room=room_level8 and global.demo_max_levels&gt;=8
or global.demo=true and asset_get_type("room_level9")==asset_room and room=room_level9 and global.demo_max_levels&gt;=9
or global.demo=true and global.demo_max_levels&gt;=10
{global.trigger_demo_ending=500;}
global.player_has_entered_goal=true;
/*Steam Achievment, Clear stage 1 (or 2)*/if global.current_level=1 or global.current_level=2{if(!steam_get_achievement("CLEAR_FIRST_STAGE")){steam_set_achievement("CLEAR_FIRST_STAGE");}}/*Steam Achievment, Clear stage 1 (or 2) END*/

/*Save Level Editor Checkpoint*/
if asset_get_type("room_leveleditor")==asset_room and room=room_leveleditor and global.actually_play_edited_level=true{
if!directory_exists(working_directory+"\Custom Levels"){directory_create(working_directory+"\Custom Levels");}/*Create directory for saving custom levels*/
ini_open(working_directory+"\Custom Levels\CustomLevelSavefile.ini");

ini_write_real("Level"+string(global.level_editor_level),"x_checkpoint",0);
ini_write_real("Level"+string(global.level_editor_level),"y_checkpoint",0);
ini_write_real("Level"+string(global.level_editor_level),"checkpoint_millisecond",0);
ini_write_real("Level"+string(global.level_editor_level),"checkpoint_second",0);
ini_write_real("Level"+string(global.level_editor_level),"checkpoint_minute",0);
ini_write_real("Level"+string(global.level_editor_level),"checkpoint_realmillisecond",0);

ini_close();}/*Save Level Editor Checkpoint END*/
goal=true;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
