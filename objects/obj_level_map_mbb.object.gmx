<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Update Foreground1*/
/*BMP small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\foreground1.bmp"){custom_foreground1=sprite_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\foreground1.bmp",image_speed,false,false,0,0);}else
/*BMP big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Foreground1.bmp"){custom_foreground1=sprite_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Foreground1.bmp",image_speed,false,false,0,0);}else
/*PNG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\foreground1.png"){custom_foreground1=sprite_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\foreground1.png",image_speed,false,false,0,0);}else
/*PNG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Foreground1.png"){custom_foreground1=sprite_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Foreground1.png",image_speed,false,false,0,0);}else
/*GIF small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\foreground1.gif"){custom_foreground1=sprite_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\foreground1.gif",image_speed,false,false,0,0);}else
/*GIF big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Foreground1.gif"){custom_foreground1=sprite_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Foreground1.gif",image_speed,false,false,0,0);}else
/*JPG small letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\foreground1.jpg"){custom_foreground1=sprite_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\foreground1.jpg",image_speed,false,false,0,0);}else
/*JPG big letter File*/if file_exists(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Foreground1.jpg"){custom_foreground1=sprite_add(working_directory+"\Custom Levels\Level"+string(global.level_editor_level)+"\Foreground1.jpg",image_speed,false,false,0,0);}else
{custom_foreground1=noone;}/*Update Foreround1 END*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if asset_get_type("room_title")==asset_room and room=room_title{instance_destroy();}/*Destroy this object if it ever appears in the wrong room*/
depth=+400;x=0;y=0;
if global.enable_foreground_layer1=true{visible=true;}else{visible=false;}
instance_activate_object(self);

if asset_get_type("room_level_select")==asset_room and room=room_level_select{if asset_get_type("spr_level_select_Map_MBB")==asset_sprite{draw_sprite(spr_level_select_Map_MBB,image_index,0,0);}}else
if asset_get_type("room_intro_cutscene")==asset_room and room=room_intro_cutscene{if asset_get_type("spr_intro_cutscene_Map_MBB")==asset_sprite{draw_sprite(spr_intro_cutscene_Map_MBB,image_index,0,0);}}else
if asset_get_type("room_ending_cutscene")==asset_room and room=room_ending_cutscene{if asset_get_type("spr_ending_cutscene_Map_MBB")==asset_sprite{draw_sprite(spr_ending_cutscene_Map_MBB,image_index,0,0);}}else
if asset_get_type("room_level1")==asset_room and room=room_level1{if asset_get_type("spr_level1_Map_MBB")==asset_sprite{draw_sprite(spr_level1_Map_MBB,image_index,0,0);}if asset_get_type("spr_level1_Map_MBB_part2")==asset_sprite{draw_sprite(spr_level1_Map_MBB_part2,image_index,4096,0)}}else
if asset_get_type("room_level2")==asset_room and room=room_level2{if asset_get_type("spr_level2_Map_MBB")==asset_sprite{draw_sprite(spr_level2_Map_MBB,image_index,0,0);}if asset_get_type("spr_level2_Map_MBB_part2")==asset_sprite{draw_sprite(spr_level2_Map_MBB_part2,image_index,4096,0)}}else
if asset_get_type("room_level3")==asset_room and room=room_level3{if asset_get_type("spr_level3_Map_MBB")==asset_sprite{draw_sprite(spr_level3_Map_MBB,image_index,0,0);}if asset_get_type("spr_level3_Map_MBB_part2")==asset_sprite{draw_sprite(spr_level3_Map_MBB_part2,image_index,4096,0)}}else
if asset_get_type("room_level4")==asset_room and room=room_level4{if asset_get_type("spr_level4_Map_MBB")==asset_sprite{draw_sprite(spr_level4_Map_MBB,image_index,0,0);}if asset_get_type("spr_level4_Map_MBB_part2")==asset_sprite{draw_sprite(spr_level4_Map_MBB_part2,image_index,4096,0)}}else
if asset_get_type("room_level5")==asset_room and room=room_level5{if asset_get_type("spr_level5_Map_MBB")==asset_sprite{draw_sprite(spr_level5_Map_MBB,image_index,0,0);}if asset_get_type("spr_level5_Map_MBB_part2")==asset_sprite{draw_sprite(spr_level5_Map_MBB_part2,image_index,4096,0)}}else
if asset_get_type("room_level6")==asset_room and room=room_level6{if asset_get_type("spr_level6_Map_MBB")==asset_sprite{draw_sprite(spr_level6_Map_MBB,image_index,0,0);}if asset_get_type("spr_level6_Map_MBB_part2")==asset_sprite{draw_sprite(spr_level6_Map_MBB_part2,image_index,4096,0)}}else
if asset_get_type("room_level7")==asset_room and room=room_level7{if asset_get_type("spr_level7_Map_MBB")==asset_sprite{draw_sprite(spr_level7_Map_MBB,image_index,0,0);}if asset_get_type("spr_level7_Map_MBB_part2")==asset_sprite{draw_sprite(spr_level7_Map_MBB_part2,image_index,4096,0)}}else
if asset_get_type("room_level8")==asset_room and room=room_level8{if asset_get_type("spr_level8_Map_MBB")==asset_sprite{draw_sprite(spr_level8_Map_MBB,image_index,0,0);}if asset_get_type("spr_level8_Map_MBB_part2")==asset_sprite{draw_sprite(spr_level8_Map_MBB_part2,image_index,4096,0)}}else
if asset_get_type("room_level9")==asset_room and room=room_level9{if asset_get_type("spr_level9_Map_MBB")==asset_sprite{draw_sprite(spr_level9_Map_MBB,image_index,0,0);}if asset_get_type("spr_level9_Map_MBB_part2")==asset_sprite{draw_sprite(spr_level9_Map_MBB_part2,image_index,4096,0)}}else
{if custom_foreground1&gt;noone{draw_sprite(custom_foreground1,image_index,0,0)};/*Update Foreground1 END*/}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
