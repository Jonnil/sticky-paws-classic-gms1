<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_checkpoint</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=-bbox_bottom;
image_index=0;image_speed=0;
if global.x_checkpoint=x and global.y_checkpoint=y{image_index=1;image_speed=0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.x_checkpoint=x and global.y_checkpoint=y{image_index=1;image_speed=0;}
if instance_number(obj_player)&gt;0{
if instance_nearest(x,y,obj_player).x&gt;x-32 and instance_nearest(x,y,obj_player).x&lt;x+32 and instance_nearest(x,y,obj_player).y&lt;y or place_meeting(x,y,instance_nearest(x,y,obj_player))
{if!collision_line(x,y,instance_nearest(x,y,obj_player).x,instance_nearest(x,y,obj_player).y,obj_wall,false,true)
{if image_index=0{image_index=1;image_speed=0;
with(instance_nearest(x,y,obj_player)){if powerupstate&lt;=0{powerupstate+=1;}}
effect_create_above(ef_ring,x,y,2,c_white);
/*10 Coin*/if asset_get_type("obj_coin")==asset_object{if asset_get_type("snd_coin")==asset_sound{audio_play_sound(snd_coin,0,0);}var obj;obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;}
obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;delay_time=10;}
obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;delay_time=20;}
obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;delay_time=30;}
obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;delay_time=40;}
obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;delay_time=50;}
obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;delay_time=60;}
obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;delay_time=70;}
obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;delay_time=80;}
obj=instance_create(x,bbox_top,obj_coin);with(obj){image_speed=1;motion_set(90,10);bounceup=true;delay_time=90;}
/*2000 Score*/score+=2000;if asset_get_type("obj_scoreup")==asset_object{obj=instance_create(x,y,obj_scoreup);with(obj){scoreup=2000;}}
/*Checkpoint*/if asset_get_type("obj_scoreup")==asset_object{obj=instance_create(x,y-20,obj_scoreup);with(obj){scoreup="CHECKPOINT";}}
}
global.x_checkpoint=x;global.y_checkpoint=y;
global.checkpoint_millisecond=global.timeattack_millisecond;
global.checkpoint_second=global.timeattack_second;
global.checkpoint_minute=global.timeattack_minute;
global.checkpoint_realmillisecond=global.timeattack_realmillisecond;

/*Save Level Editor Checkpoint*/
if asset_get_type("room_leveleditor")==asset_room and room=room_leveleditor and global.actually_play_edited_level=true{
if!directory_exists(working_directory+"\Custom Levels"){directory_create(working_directory+"\Custom Levels");}/*Create directory for saving custom levels*/
ini_open(working_directory+"\Custom Levels\CustomLevelSavefile.ini");

ini_write_real("Level"+string(global.level_editor_level),"x_checkpoint",global.x_checkpoint);
ini_write_real("Level"+string(global.level_editor_level),"y_checkpoint",global.y_checkpoint);
ini_write_real("Level"+string(global.level_editor_level),"checkpoint_millisecond",global.timeattack_millisecond);
ini_write_real("Level"+string(global.level_editor_level),"checkpoint_second",global.timeattack_second);
ini_write_real("Level"+string(global.level_editor_level),"checkpoint_minute",global.timeattack_minute);
ini_write_real("Level"+string(global.level_editor_level),"checkpoint_realmillisecond",global.timeattack_realmillisecond);

ini_close();}/*Save Level Editor Checkpoint END*/

}}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
