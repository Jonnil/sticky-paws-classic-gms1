<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_map</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Allow moves on world map*/
allow_free_movement=false;/*Turn this to true to move freely on the map instead of moving on paths, should be false by default*/
/*Allow moves on world map END*/

global.time_countdown=500;
global.player_has_entered_goal=false;
image_speed=0.3;
can_move=true;
can_enter=true;
entering_level=false;
delay=0;
transfer_data=false;
fastest_time=0;
move_delay=0;
can_enter_level=0;
game_saved_message=256;
if asset_get_type("obj_player_map_overlay")==asset_object{if instance_number(obj_player_map_overlay)&lt;1{instance_create(x,y,obj_player_map_overlay);}}
draw_xscale=1;draw_yscale=1;

/*Load Game*/
if(file_exists("File"+string(global.file)+".ini")){
ini_open("File"+string(global.file)+".ini");
/*Load Player Position*/
if(ini_read_real("Player","player_x",0)&gt;0)and(ini_read_real("Player","player_y",0)&gt;0)
{x=ini_read_real("Player","player_x",0);y=ini_read_real("Player","player_y",0);}/*Load Player Position End*/
ini_close();move_snap(32,23);}/*Load Game End*/

xx=x;yy=y;
if asset_get_type("obj_camera")==asset_object{if instance_number(obj_camera)&lt;1{instance_create(x,y,obj_camera);}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite variable handeling
character=global.character_for_player_1;

///Play as Sticky the Cat
if character=0
{sprite_index=spr_player_map;
sprite_map_enter=spr_player_map_enter;
}

///Play as Catlyn the Cat
else if character=1
{sprite_index=spr_catlyn_map;
sprite_map_enter=spr_catlyn_map_enter;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_artwork_collection">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if move_delay&gt;=10{
hspeed=0;vspeed=0;
x=other.x;y=other.y;
move_snap(32,32);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed=0;vspeed=0;
move_snap(32,32);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_level">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if move_delay&gt;=10{
hspeed=0;vspeed=0;
x=other.x;y=other.y;
move_snap(32,32);
/*Save Player Position*/if speed=0{ini_open("File"+string(global.file)+".ini");ini_write_real("Player","player_x",other.x);ini_write_real("Player","player_y",other.y);ini_close();}/*Save Player Position End*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite variable handeling
character=global.character_for_player_1;

///Play as Sticky the Cat
if character=0
{sprite_map_enter=spr_player_map_enter;}

///Play as Catlyn the Cat
else if character=1
{sprite_map_enter=spr_catlyn_map_enter;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Quit Game*/if global.QuitLevel=true or global.QuitGame=true{
global.level_clear_rate="enter";
/*Save Player Position*/if speed=0{ini_open("File"+string(global.file)+".ini");ini_write_real("Player","player_x",x);ini_write_real("Player","player_y",y);ini_close();}/*Save Player Position End*/
scr_savelevel();
global.QuitLevel=false;global.QuitGame=false;room_persistent=false;if asset_get_type("room_title")==asset_room{room_goto(room_title);}else{game_restart();}}/*Quit Game End*/

/*Color Skin*/image_blend=global.hex_color_for_player_1;/*Color Skin END*/

/*Make sure level music and sound effects stops playing*/
if asset_get_type("snd_slip")==asset_sound{if audio_is_playing(snd_slip){audio_stop_sound(snd_slip);}}
if asset_get_type("snd_slip_ice")==asset_sound{if audio_is_playing(snd_slip_ice){audio_stop_sound(snd_slip_ice);}}
if asset_get_type("snd_music_titlescreen")==asset_sound{if audio_is_playing(snd_music_titlescreen){audio_stop_sound(snd_music_titlescreen);}}
if asset_get_type("snd_music_boss")==asset_sound{if audio_is_playing(snd_music_boss){audio_stop_sound(snd_music_boss);}}
if asset_get_type("snd_ambience_nature_day")==asset_sound{if audio_is_playing(snd_ambience_nature_day){audio_stop_sound(snd_ambience_nature_day);}}
if asset_get_type("snd_music_level1_start")==asset_sound{if audio_is_playing(snd_music_level1_start){audio_stop_sound(snd_music_level1_start);}}
if asset_get_type("snd_music_level1_loop")==asset_sound{if audio_is_playing(snd_music_level1_loop){audio_stop_sound(snd_music_level1_loop);}}
if asset_get_type("snd_music_level2_start")==asset_sound{if audio_is_playing(snd_music_level2_start){audio_stop_sound(snd_music_level2_start);}}
if asset_get_type("snd_music_level2_loop")==asset_sound{if audio_is_playing(snd_music_level2_loop){audio_stop_sound(snd_music_level2_loop);}}
if asset_get_type("snd_music_level3_start")==asset_sound{if audio_is_playing(snd_music_level3_start){audio_stop_sound(snd_music_level3_start);}}
if asset_get_type("snd_music_level3_loop")==asset_sound{if audio_is_playing(snd_music_level3_loop){audio_stop_sound(snd_music_level3_loop);}}
if asset_get_type("snd_music_level4_start")==asset_sound{if audio_is_playing(snd_music_level4_start){audio_stop_sound(snd_music_level4_start);}}
if asset_get_type("snd_music_level4_loop")==asset_sound{if audio_is_playing(snd_music_level4_loop){audio_stop_sound(snd_music_level4_loop);}}
if asset_get_type("snd_music_level5_start")==asset_sound{if audio_is_playing(snd_music_level5_start){audio_stop_sound(snd_music_level5_start);}}
if asset_get_type("snd_music_level5_loop")==asset_sound{if audio_is_playing(snd_music_level5_loop){audio_stop_sound(snd_music_level5_loop);}}
if asset_get_type("snd_music_level6_start")==asset_sound{if audio_is_playing(snd_music_level6_start){audio_stop_sound(snd_music_level6_start);}}
if asset_get_type("snd_music_level6_loop")==asset_sound{if audio_is_playing(snd_music_level6_loop){audio_stop_sound(snd_music_level6_loop);}}
if asset_get_type("snd_music_level7_start")==asset_sound{if audio_is_playing(snd_music_level7_start){audio_stop_sound(snd_music_level7_start);}}
if asset_get_type("snd_music_level7_loop")==asset_sound{if audio_is_playing(snd_music_level7_loop){audio_stop_sound(snd_music_level7_loop);}}
if asset_get_type("snd_music_level8_start")==asset_sound{if audio_is_playing(snd_music_level8_start){audio_stop_sound(snd_music_level8_start);}}
if asset_get_type("snd_music_level8_loop")==asset_sound{if audio_is_playing(snd_music_level8_loop){audio_stop_sound(snd_music_level8_loop);}}
if asset_get_type("snd_music_level9_start")==asset_sound{if audio_is_playing(snd_music_level9_start){audio_stop_sound(snd_music_level9_start);}}
if asset_get_type("snd_music_level9_loop")==asset_sound{if audio_is_playing(snd_music_level9_loop){audio_stop_sound(snd_music_level9_loop);}}
if audio_is_playing(global.music){audio_stop_sound(global.music);}
if audio_is_playing(global.music_underwater){audio_stop_sound(global.music_underwater);}
global.music=noone;global.music_underwater=noone;
/*Make sure level music stops playing End*/

/*Keep the game at 60 FPS*/
room_speed=global.max_fps;
/*Deactivate instances outside view*/instance_activate_all();instance_deactivate_region(view_xview-32,view_yview-32,view_xview+view_wview+32,view_yview+view_hview+32,false,true);
if asset_get_type("obj_level")==asset_object{instance_activate_object(obj_level);}/*Deactivate instances outside view END*/
/*Keep the game at 60 FPS END*/

/*Hide all HUD elements*/global.hud_show_lives=true;global.hud_show_coins=false;global.hud_show_starcoins=false;global.hud_show_score=false;/*Hide all HUD elements END*/

if global.goal_active=true{global.goal_active=false;}

if!audio_is_playing(snd_music_map){audio_play_sound(snd_music_map,0,true);}audio_sound_gain(snd_music_map,global.music_volume,0);

/*Keyboard Controls*/
gamepad_set_axis_deadzone(0,0.50);
key_up=(keyboard_check(global.player1_key_up))and(!keyboard_check(global.player1_key_down))or(gamepad_button_check(0,gp_padu))and(!gamepad_button_check(0,gp_padd))or(gamepad_axis_value(0,gp_axislv)&lt;0);
key_left=(keyboard_check(global.player1_key_left))and(!keyboard_check(global.player1_key_right))or(gamepad_button_check(0,gp_padl))and(!gamepad_button_check(0,gp_padr))or(gamepad_axis_value(0,gp_axislh)&lt;0);
key_right=(keyboard_check(global.player1_key_right))and(!keyboard_check(global.player1_key_left))or(gamepad_button_check(0,gp_padr))and(!gamepad_button_check(0,gp_padl))or(gamepad_axis_value(0,gp_axislh)&gt;0);
key_down=(keyboard_check(global.player1_key_down))and(!keyboard_check(global.player1_key_up))or(gamepad_button_check(0,gp_padd))and(!gamepad_button_check(0,gp_padu))or(gamepad_axis_value(0,gp_axislv)&gt;0);
key_a=(gamepad_button_check_pressed(0,gp_face1))or(gamepad_button_check_pressed(0,gp_face2))or(keyboard_check_pressed(global.player1_key_jump))or(keyboard_check_pressed(vk_enter));
key_b_pressed=(gamepad_button_check_pressed(0,gp_face3))or(gamepad_button_check_pressed(0,gp_face4))or(keyboard_check_pressed(global.player1_key_dash));
/*Keyboard Controls End*/

depth=-bbox_bottom-room_height;
xx=lerp(xx,x,0.2);yy=lerp(yy,y,0.2);
draw_xscale=lerp(draw_xscale,1,0.1);draw_yscale=lerp(draw_yscale,1,0.1);
draw_sprite_ext(sprite_index,image_index,xx,yy,draw_xscale,draw_yscale,0,image_blend,1);
if can_move=true and asset_get_type("obj_camera")==asset_object and instance_number(obj_camera)&gt;0and global.QuitLevel=false and global.QuitGame=false{

/*Pause*/if keyboard_check_pressed(vk_escape)
or gamepad_button_check_pressed(0,gp_start)or gamepad_button_check_pressed(0,gp_select)
or!window_has_focus()
{global.pause_player=0;if global.goal_active=false{if asset_get_type("room_pause")==asset_room{
global.PauseScreen=sprite_create_from_surface(application_surface,0,0,surface_get_width(application_surface),surface_get_height(application_surface),0,1,0,0);
room_persistent=true;global.PauseRoom=room;room_goto(room_pause);}else{game_restart();}}}

else if gamepad_button_check_pressed(1,gp_start)or gamepad_button_check_pressed(1,gp_select)
{global.pause_player=1;if global.goal_active=false{if asset_get_type("room_pause")==asset_room{
global.PauseScreen=sprite_create_from_surface(application_surface,0,0,surface_get_width(application_surface),surface_get_height(application_surface),0,1,0,0);
room_persistent=true;global.PauseRoom=room;room_goto(room_pause);}else{game_restart();}}}

else if gamepad_button_check_pressed(2,gp_start)or gamepad_button_check_pressed(2,gp_select)
{global.pause_player=2;if global.goal_active=false{if asset_get_type("room_pause")==asset_room{
global.PauseScreen=sprite_create_from_surface(application_surface,0,0,surface_get_width(application_surface),surface_get_height(application_surface),0,1,0,0);
room_persistent=true;global.PauseRoom=room;room_goto(room_pause);}else{game_restart();}}}

else if gamepad_button_check_pressed(3,gp_start)or gamepad_button_check_pressed(3,gp_select)
{global.pause_player=3;if global.goal_active=false{if asset_get_type("room_pause")==asset_room{
global.PauseScreen=sprite_create_from_surface(application_surface,0,0,surface_get_width(application_surface),surface_get_height(application_surface),0,1,0,0);
room_persistent=true;global.PauseRoom=room;room_goto(room_pause);}else{game_restart();}}}

else{room_persistent=false;}
/*Pause End*/

if allow_free_movement=true{/*Free Movement*/
if key_up and point_distance(xx,yy,x,y)&lt;4 and move_delay&gt;10{if y&gt;view_yview+64{if!position_meeting(x,y-32,obj_wall)and!position_meeting(x,y-64,obj_wall){y-=64;move_delay=0;transfer_data=false;}else{if asset_get_type("snd_bump")==asset_sound{if!audio_is_playing(snd_bump){draw_xscale=1.5;draw_yscale=0.5;yy-=32;audio_play_sound(snd_bump,0,0);audio_sound_gain(snd_bump,global.sfx_volume,0);}}}}}
if key_left and point_distance(xx,yy,x,y)&lt;4 and move_delay&gt;10{if x&gt;view_xview+64{if!position_meeting(x-32,y,obj_wall)and!position_meeting(x-64,y,obj_wall){x-=64;move_delay=0;transfer_data=false;}else{if asset_get_type("snd_bump")==asset_sound{if!audio_is_playing(snd_bump){draw_xscale=0.5;draw_yscale=1.5;xx-=32;audio_play_sound(snd_bump,0,0);audio_sound_gain(snd_bump,global.sfx_volume,0);}}}}}
if key_right and point_distance(xx,yy,x,y)&lt;4 and move_delay&gt;10{if x&lt;view_xview+view_wview-64{if!position_meeting(x+32,y,obj_wall)and!position_meeting(x+64,y,obj_wall){x+=64;move_delay=0;transfer_data=false;}else{if asset_get_type("snd_bump")==asset_sound{if!audio_is_playing(snd_bump){draw_xscale=0.5;draw_yscale=1.5;xx+=32;audio_play_sound(snd_bump,0,0);audio_sound_gain(snd_bump,global.sfx_volume,0);}}}}}
if key_down and point_distance(xx,yy,x,y)&lt;4 and move_delay&gt;10{if y&lt;view_yview+view_hview-64{if!position_meeting(x,y+32,obj_wall)and!position_meeting(x,y+64,obj_wall){y+=64;move_delay=0;transfer_data=false;}else{if asset_get_type("snd_bump")==asset_sound{if!audio_is_playing(snd_bump){draw_xscale=1.5;draw_yscale=0.5;yy+=32;audio_play_sound(snd_bump,0,0);audio_sound_gain(snd_bump,global.sfx_volume,0);}}}}}}/*Free Movement END*/
else{/*Movement on paths*/
if key_up and move_delay&gt;10 and speed=0{if y&gt;view_yview+64{if!position_meeting(x,y-32,obj_wall){vspeed-=8;move_delay=0;transfer_data=false;}else{if asset_get_type("snd_bump")==asset_sound{if!audio_is_playing(snd_bump){draw_xscale=1.5;draw_yscale=0.5;yy-=32;audio_play_sound(snd_bump,0,0);audio_sound_gain(snd_bump,global.sfx_volume,0);}}}}}
if key_left and move_delay&gt;10 and speed=0{if x&gt;view_xview+64{if!position_meeting(x-32,y,obj_wall){hspeed-=8;move_delay=0;transfer_data=false;}else{if asset_get_type("snd_bump")==asset_sound{if!audio_is_playing(snd_bump){draw_xscale=0.5;draw_yscale=1.5;xx-=32;audio_play_sound(snd_bump,0,0);audio_sound_gain(snd_bump,global.sfx_volume,0);}}}}}
if key_right and move_delay&gt;10 and speed=0{if x&lt;view_xview+view_wview-64{if!position_meeting(x+32,y,obj_wall){hspeed+=8;move_delay=0;transfer_data=false;}else{if asset_get_type("snd_bump")==asset_sound{if!audio_is_playing(snd_bump){draw_xscale=0.5;draw_yscale=1.5;xx+=32;audio_play_sound(snd_bump,0,0);audio_sound_gain(snd_bump,global.sfx_volume,0);}}}}}
if key_down and move_delay&gt;10 and speed=0{if y&lt;view_yview+view_hview-64{if!position_meeting(x,y+32,obj_wall){vspeed+=8;move_delay=0;transfer_data=false;}else{if asset_get_type("snd_bump")==asset_sound{if!audio_is_playing(snd_bump){draw_xscale=1.5;draw_yscale=0.5;yy+=32;audio_play_sound(snd_bump,0,0);audio_sound_gain(snd_bump,global.sfx_volume,0);}}}}}/*Movement on paths END*/

/*Show controls for where you can go*/if move_delay&gt;10 and speed=0{
if!place_meeting(x+4,y,obj_wall) and speed=0{/*Key Right*/if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,6,x+64,y,0.5,0.5,0,c_white,1);}else{draw_sprite_ext(spr_keyboard_keys,global.player1_key_right,x+64,y,0.5,0.5,0,c_white,1);}/*Key Right END*/}
if!place_meeting(x-4,y,obj_wall) and speed=0{/*Key Left*/if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,4,x-64,y,0.5,0.5,0,c_white,1);}else{draw_sprite_ext(spr_keyboard_keys,global.player1_key_left,x-64,y,0.5,0.5,0,c_white,1);}/*Key Left END*/}
if!place_meeting(x,y+4,obj_wall) and speed=0{/*Key Down*/if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,7,x,y+64,0.5,0.5,0,c_white,1);}else{draw_sprite_ext(spr_keyboard_keys,global.player1_key_down,x,y+64,0.5,0.5,0,c_white,1);}/*Key Down END*/}
if!place_meeting(x,y-4,obj_wall) and speed=0{/*Key Up*/if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,5,x,y-64,0.5,0.5,0,c_white,1);}else{draw_sprite_ext(spr_keyboard_keys,global.player1_key_up,x,y-64,0.5,0.5,0,c_white,1);}/*Key Up END*/}}/*Show controls for where you can go END*/

/*Touch Map Turn Right Down*/if place_meeting(x,y,obj_map_turn_right_down){
if abs(hspeed)&gt;0 and instance_nearest(x,y,obj_map_turn_right_down).delay=0/*or key_down and!key_up*/{hspeed=0;vspeed=+8;x=instance_nearest(x,y,obj_map_turn_right_down).x;y=instance_nearest(x,y,obj_map_turn_right_down).y;with(instance_nearest(x,y,obj_map_turn_right_down)){delay=10;}}else
if abs(vspeed)&gt;0 and instance_nearest(x,y,obj_map_turn_right_down).delay=0/*or key_right and!key_left*/{hspeed=+8;vspeed=0;x=instance_nearest(x,y,obj_map_turn_right_down).x;y=instance_nearest(x,y,obj_map_turn_right_down).y;with(instance_nearest(x,y,obj_map_turn_right_down)){delay=10;}}}/*Touch Map Turn Right Down END*/
/*Touch Map Turn Left Down*/else if place_meeting(x,y,obj_map_turn_left_down){
if abs(hspeed)&gt;0 and instance_nearest(x,y,obj_map_turn_left_down).delay=0/*or key_down and!key_up*/{hspeed=0;vspeed=+8;if instance_nearest(x,y,obj_map_turn_left_down).delay=0{x=instance_nearest(x,y,obj_map_turn_left_down).x;y=instance_nearest(x,y,obj_map_turn_left_down).y;with(instance_nearest(x,y,obj_map_turn_left_down)){delay=10;}}}else
if abs(vspeed)&gt;0 and instance_nearest(x,y,obj_map_turn_left_down).delay=0/*or key_left and!key_right*/{hspeed=-8;vspeed=0;if instance_nearest(x,y,obj_map_turn_left_down).delay=0{x=instance_nearest(x,y,obj_map_turn_left_down).x;y=instance_nearest(x,y,obj_map_turn_left_down).y;with(instance_nearest(x,y,obj_map_turn_left_down)){delay=10;}}}}/*Touch Map Turn Left Down END*/
/*Touch Map Turn Up Left*/else if place_meeting(x,y,obj_map_turn_up_left){
if abs(hspeed)&gt;0 and instance_nearest(x,y,obj_map_turn_up_left).delay=0/*or key_up and!key_down*/{hspeed=0;vspeed=-8;if instance_nearest(x,y,obj_map_turn_up_left).delay=0{x=instance_nearest(x,y,obj_map_turn_up_left).x;y=instance_nearest(x,y,obj_map_turn_up_left).y;with(instance_nearest(x,y,obj_map_turn_up_left)){delay=10;}}}else
if abs(vspeed)&gt;0 and instance_nearest(x,y,obj_map_turn_up_left).delay=0/*or key_left and!key_right*/{hspeed=-8;vspeed=0;if instance_nearest(x,y,obj_map_turn_up_left).delay=0{x=instance_nearest(x,y,obj_map_turn_up_left).x;y=instance_nearest(x,y,obj_map_turn_up_left).y;with(instance_nearest(x,y,obj_map_turn_up_left)){delay=10;}}}}/*Touch Map Turn Up Left END*/
/*Touch Map Turn Up Right*/else if place_meeting(x,y,obj_map_turn_up_right){
if abs(hspeed)&gt;0 and instance_nearest(x,y,obj_map_turn_up_right).delay=0/*or key_up and!key_down*/{hspeed=0;vspeed=-8;if instance_nearest(x,y,obj_map_turn_up_right).delay=0{x=instance_nearest(x,y,obj_map_turn_up_right).x;y=instance_nearest(x,y,obj_map_turn_up_right).y;with(instance_nearest(x,y,obj_map_turn_up_right)){delay=10;}}}else
if abs(vspeed)&gt;0 and instance_nearest(x,y,obj_map_turn_up_right).delay=0/*or key_right and!key_left*/{hspeed=+8;vspeed=0;if instance_nearest(x,y,obj_map_turn_up_right).delay=0{x=instance_nearest(x,y,obj_map_turn_up_right).x;y=instance_nearest(x,y,obj_map_turn_up_right).y;with(instance_nearest(x,y,obj_map_turn_up_right)){delay=10;}}}}/*Touch Map Turn Up Right END*/
}

/*Enter Level*/
if key_a and can_move=true and can_enter_level&gt;=30 and distance_to_object(instance_nearest(x,y,obj_level))&lt;4 and speed=0{
if instance_nearest(x,y,obj_level).clear_rate="enter"
or instance_nearest(x,y,obj_level).clear_rate="clear"
{global.current_level=instance_nearest(x,y,obj_level).level;
/*Save Player Position*/x=instance_nearest(x,y,obj_level).x;y=instance_nearest(x,y,obj_level).y;ini_open("File"+string(global.file)+".ini");ini_write_real("Player","player_x",x);ini_write_real("Player","player_y",y);ini_close();/*Save Player Position End*/
can_move=false;entering_level=true;delay=0;sprite_index=sprite_map_enter;
score=0;global.spikes_emerge_time=0;
global.timeattack_transfer=true;
global.x_checkpoint=instance_nearest(x,y,obj_level).x_checkpoint;
global.y_checkpoint=instance_nearest(x,y,obj_level).y_checkpoint;
with(instance_nearest(x,y,obj_level)){
if x_checkpoint&gt;0 or y_checkpoint&gt;0{
global.checkpoint_realmillisecond=checkpoint_realmillisecond;
global.checkpoint_millisecond=checkpoint_millisecond;
global.checkpoint_second=checkpoint_second;
global.checkpoint_minute=checkpoint_minute;}}
global.star_coin1=instance_nearest(x,y,obj_level).star_coin1;
global.star_coin2=instance_nearest(x,y,obj_level).star_coin2;
global.star_coin3=instance_nearest(x,y,obj_level).star_coin3;
global.star_coin4=instance_nearest(x,y,obj_level).star_coin4;
global.star_coin5=instance_nearest(x,y,obj_level).star_coin5;
global.lives_until_assist=instance_nearest(x,y,obj_level).lives_until_assist;}/*Enter Level End*/
}}

if can_move=false{delay+=1;}

/*Start Level*/
if can_move=false and delay&gt;=60 and asset_get_type("obj_camera")==asset_object and instance_number(obj_camera)&gt;0 and obj_camera.iris_yscale&lt;=0.001{if global.QuitLevel=false or global.QuitGame=false{
audio_stop_all();global.trigger_demo_ending=0;
if instance_nearest(x,y,obj_level).level=1and asset_get_type("room_level1")==asset_room{room_goto(room_level1);}
if instance_nearest(x,y,obj_level).level=2and asset_get_type("room_level2")==asset_room{room_goto(room_level2);}
if instance_nearest(x,y,obj_level).level=3and asset_get_type("room_level3")==asset_room{room_goto(room_level3);}
if instance_nearest(x,y,obj_level).level=4and asset_get_type("room_level4")==asset_room{room_goto(room_level4);}
if instance_nearest(x,y,obj_level).level=5and asset_get_type("room_level5")==asset_room{room_goto(room_level5);}
if instance_nearest(x,y,obj_level).level=6and asset_get_type("room_level6")==asset_room{room_goto(room_level6);}
if instance_nearest(x,y,obj_level).level=7and asset_get_type("room_level7")==asset_room{room_goto(room_level7);}
if instance_nearest(x,y,obj_level).level=8and asset_get_type("room_level8")==asset_room{room_goto(room_level8);}
if instance_nearest(x,y,obj_level).level=9and asset_get_type("room_level9")==asset_room{room_goto(room_level9);}
/*Start Level End*/}}
move_delay+=1;
if can_enter_level&lt;30{can_enter_level+=1;}


if distance_to_object(instance_nearest(xx,yy,obj_level))&gt;32{global.level_clear_rate=noone;
global.x_checkpoint=false;
global.y_checkpoint=false;
global.timeattack_millisecond=0;
global.timeattack_second=0;
global.timeattack_minute=0;
global.timeattack_realmillisecond=999999999;
global.checkpoint_millisecond=0;
global.checkpoint_second=0;
global.checkpoint_minute=0;
global.checkpoint_realmillisecond=0;
global.lives_until_assist=0;can_move=true;delay=0;transfer_data=false;}

mask_index=spr_wall;

/*Show Level Info*/
/*Show high scores*/
if distance_to_object(instance_nearest(x,y,obj_level))&lt;4 and move_delay&gt;10{
if instance_nearest(x,y,obj_level).clear_rate="enter"or instance_nearest(x,y,obj_level).clear_rate="clear"{

draw_set_halign(fa_center);draw_set_valign(fa_center);

/*Show High Score*/if instance_nearest(x,y,obj_level).level_score&gt;0{
draw_text_transformed_colour(x-2,y-96,"High Score: "+string(instance_nearest(x,y,obj_level).level_score),global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);
draw_text_transformed_colour(x+2,y-96,"High Score: "+string(instance_nearest(x,y,obj_level).level_score),global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);
draw_text_transformed_colour(x,y-96-2,"High Score: "+string(instance_nearest(x,y,obj_level).level_score),global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);
draw_text_transformed_colour(x,y-96+2,"High Score: "+string(instance_nearest(x,y,obj_level).level_score),global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);
draw_text_transformed_colour(x,y-96,"High Score: "+string(instance_nearest(x,y,obj_level).level_score),global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);}/*Show High Score End*/

/*Show Fastest Time*/if instance_nearest(x,y,obj_level).timeattack_realmillisecond&lt;999999999 and instance_nearest(x,y,obj_level).timeattack_realmillisecond&gt;0
{draw_text_transformed_colour(x-2,y-64,"Fastest Time: "+string(instance_nearest(x,y,obj_level).timeattack_minute)+":"+string(instance_nearest(x,y,obj_level).timeattack_second)+"."+string(instance_nearest(x,y,obj_level).timeattack_millisecond),global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x+2,y-64,"Fastest Time: "+string(instance_nearest(x,y,obj_level).timeattack_minute)+":"+string(instance_nearest(x,y,obj_level).timeattack_second)+"."+string(instance_nearest(x,y,obj_level).timeattack_millisecond),global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x,y-64-2,"Fastest Time: "+string(instance_nearest(x,y,obj_level).timeattack_minute)+":"+string(instance_nearest(x,y,obj_level).timeattack_second)+"."+string(instance_nearest(x,y,obj_level).timeattack_millisecond),global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x,y-64+2,"Fastest Time: "+string(instance_nearest(x,y,obj_level).timeattack_minute)+":"+string(instance_nearest(x,y,obj_level).timeattack_second)+"."+string(instance_nearest(x,y,obj_level).timeattack_millisecond),global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x,y-64,"Fastest Time: "+string(instance_nearest(x,y,obj_level).timeattack_minute)+":"+string(instance_nearest(x,y,obj_level).timeattack_second)+"."+string(instance_nearest(x,y,obj_level).timeattack_millisecond),global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);}/*Show Fastest Time End*/
    
/*Show Star Coin*/if asset_get_type("spr_star_coin")==asset_sprite{
if instance_nearest(x,y,obj_level).star_coin1=true{draw_sprite_ext(spr_star_coin,0,view_xview-48+74,view_yview+64,0.3,0.3,0,c_white,1);}else{draw_sprite_ext(spr_star_coin,0,view_xview-48+74,view_yview+64,0.3,0.3,0,c_gray,0.5);}
if instance_nearest(x,y,obj_level).star_coin2=true{draw_sprite_ext(spr_star_coin,0,view_xview-24+74,view_yview+64,0.3,0.3,0,c_white,1);}else{draw_sprite_ext(spr_star_coin,0,view_xview-24+74,view_yview+64,0.3,0.3,0,c_gray,0.5);}
if instance_nearest(x,y,obj_level).star_coin3=true{draw_sprite_ext(spr_star_coin,0,view_xview+74,view_yview+64,0.3,0.3,0,c_white,1);}else{draw_sprite_ext(spr_star_coin,0,view_xview+74,view_yview+64,0.3,0.3,0,c_gray,0.5);}
if instance_nearest(x,y,obj_level).star_coin4=true{draw_sprite_ext(spr_star_coin,0,view_xview+24+74,view_yview+64,0.3,0.3,0,c_white,1);}else{draw_sprite_ext(spr_star_coin,0,view_xview+24+74,view_yview+64,0.3,0.3,0,c_gray,0.5);}
if instance_nearest(x,y,obj_level).star_coin5=true{draw_sprite_ext(spr_star_coin,0,view_xview+48+74,view_yview+64,0.3,0.3,0,c_white,1);}else{draw_sprite_ext(spr_star_coin,0,view_xview+48+74,view_yview+64,0.3,0.3,0,c_gray,0.5);}}/*Show Star Coin End*/

/*Show if Checkpoint is activated*/
if instance_nearest(x,y,obj_level).x_checkpoint&gt;0or instance_nearest(x,y,obj_level).y_checkpoint&gt;0{draw_sprite_ext(spr_checkpoint,1,x+122,y-64,0.3,0.3,0,c_white,1);}/*Show if Checkpoint is activated END*/
}}/*Show Level Info End*/

/*Show Game Saved Message*/
if game_saved_message&gt;1{game_saved_message-=1;
draw_set_halign(fa_center);draw_set_valign(fa_center);
draw_text_transformed_colour(xx-2,yy+128,"Save Complete",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(xx+2,yy+128,"Save Complete",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(xx,yy+128-2,"Save Complete",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(xx,yy+128+2,"Save Complete",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(xx,yy+128,"Save Complete",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);}

/*Show Enter Level Key*/if can_move=true and can_enter_level&gt;=30 and distance_to_object(instance_nearest(x,y,obj_level))&lt;4 and speed=0 and instance_nearest(x,y,obj_level).clear_rate!="closed"{
draw_set_halign(fa_center);draw_set_valign(fa_center);
draw_text_transformed_colour(view_xview+80-2,view_yview+view_hview-28,"Enter Level:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+80+2,view_yview+view_hview-28,"Enter Level:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+80,view_yview+view_hview-28-2,"Enter Level:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+80,view_yview+view_hview-28+2,"Enter Level:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+80,view_yview+view_hview-28,"Enter Level:",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);
if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,0,view_xview+160,view_yview+view_hview-28,0.5,0.5,0,c_white,1);}
else{draw_sprite_ext(spr_keyboard_keys,global.player1_key_jump,view_xview+160,view_yview+view_hview-28,0.5,0.5,0,c_white,1);}}/*Show Enter Level Key End*/

/*Show View Gallery Key*/if can_move=true and distance_to_object(instance_nearest(x,y,obj_artwork_collection))&lt;4 and speed=0 and instance_nearest(x,y,obj_artwork_collection).can_navigate=false{
draw_set_halign(fa_center);draw_set_valign(fa_center);
draw_text_transformed_colour(view_xview+80-2,view_yview+view_hview-28,"View Gallery:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+80+2,view_yview+view_hview-28,"View Gallery:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+80,view_yview+view_hview-28-2,"View Gallery:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+80,view_yview+view_hview-28+2,"View Gallery:",global.default_text_size,global.default_text_size,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+80,view_yview+view_hview-28,"View Gallery:",global.default_text_size,global.default_text_size,0,c_white,c_white,c_white,c_white,1);
if gamepad_is_connected(0){draw_sprite_ext(spr_xbox_buttons,0,view_xview+170,view_yview+view_hview-28,0.5,0.5,0,c_white,1);}
else{draw_sprite_ext(spr_keyboard_keys,global.player1_key_jump,view_xview+170,view_yview+view_hview-28,0.5,0.5,0,c_white,1);}}/*Show View Gallery Key End*/

/*If player object is present, destroy the player object*/if instance_number(obj_player)&gt;0{with(obj_player){instance_destroy()}}

if global.trigger_ending=true{room_goto(room_ending_cutscene);}

/*Load Config*/scr_loadconfig();/*Load Config End*/

/*Starting Levels*/if asset_get_type("obj_level1")==asset_object{with(obj_level1){if clear_rate="closed"{clear_rate="enter";}}}/*Starting Levels End*/
/*Unlock other levels*/
if asset_get_type("obj_level1")==asset_object and instance_number(obj_level1)&gt;0 and obj_level1.clear_rate="clear"{if asset_get_type("obj_level2")==asset_object and instance_number(obj_level2)&gt;0{with(obj_level2){if clear_rate="closed"{clear_rate="enter";}}}}
if asset_get_type("obj_level2")==asset_object and instance_number(obj_level2)&gt;0 and obj_level2.clear_rate="clear"{if asset_get_type("obj_level3")==asset_object and instance_number(obj_level3)&gt;0{with(obj_level3){if clear_rate="closed"{clear_rate="enter";}}}}
if asset_get_type("obj_level3")==asset_object and instance_number(obj_level3)&gt;0 and obj_level3.clear_rate="clear"{if asset_get_type("obj_level4")==asset_object and instance_number(obj_level4)&gt;0{with(obj_level4){if clear_rate="closed"{clear_rate="enter";}}}}
if asset_get_type("obj_level4")==asset_object and instance_number(obj_level4)&gt;0 and obj_level4.clear_rate="clear"{if asset_get_type("obj_level5")==asset_object and instance_number(obj_level5)&gt;0{with(obj_level5){if clear_rate="closed"{clear_rate="enter";}}}}
if asset_get_type("obj_level5")==asset_object and instance_number(obj_level5)&gt;0 and obj_level5.clear_rate="clear"{if asset_get_type("obj_level6")==asset_object and instance_number(obj_level6)&gt;0{with(obj_level6){if clear_rate="closed"{clear_rate="enter";}}}}
if asset_get_type("obj_level6")==asset_object and instance_number(obj_level6)&gt;0 and obj_level6.clear_rate="clear"{if asset_get_type("obj_level7")==asset_object and instance_number(obj_level7)&gt;0{with(obj_level7){if clear_rate="closed"{clear_rate="enter";}}}}
if asset_get_type("obj_level7")==asset_object and instance_number(obj_level7)&gt;0 and obj_level7.clear_rate="clear"{if asset_get_type("obj_level8")==asset_object and instance_number(obj_level8)&gt;0{with(obj_level8){if clear_rate="closed"{clear_rate="enter";}}}}
if asset_get_type("obj_level8")==asset_object and instance_number(obj_level8)&gt;0 and obj_level8.clear_rate="clear"{if asset_get_type("obj_level9")==asset_object and instance_number(obj_level9)&gt;0{with(obj_level9){if clear_rate="closed"{clear_rate="enter";}}}}
/*Unlock other levels End*/

/*Set Steam Achievements*/
/*Clear Every Level Achievement*/if asset_get_type("obj_level1")==asset_object and instance_number(obj_level1)&gt;0 and obj_level1.clear_rate="clear"
if asset_get_type("obj_level2")==asset_object and instance_number(obj_level2)&gt;0 and obj_level2.clear_rate="clear"
if asset_get_type("obj_level3")==asset_object and instance_number(obj_level3)&gt;0 and obj_level3.clear_rate="clear"
if asset_get_type("obj_level4")==asset_object and instance_number(obj_level4)&gt;0 and obj_level4.clear_rate="clear"
if asset_get_type("obj_level5")==asset_object and instance_number(obj_level5)&gt;0 and obj_level5.clear_rate="clear"
if asset_get_type("obj_level6")==asset_object and instance_number(obj_level6)&gt;0 and obj_level6.clear_rate="clear"
if asset_get_type("obj_level7")==asset_object and instance_number(obj_level7)&gt;0 and obj_level7.clear_rate="clear"
if asset_get_type("obj_level8")==asset_object and instance_number(obj_level8)&gt;0 and obj_level8.clear_rate="clear"
if asset_get_type("obj_level9")==asset_object and instance_number(obj_level9)&gt;0 and obj_level9.clear_rate="clear"
{if!steam_get_achievement("ach_clear_every_level"){steam_set_achievement("ach_clear_every_level");}}/*Clear Every Level Achievement END*/

/*Get Every Star Coin Achievement*/
if obj_level1.star_coin1=true
and obj_level1.star_coin2=true
and obj_level1.star_coin3=true
and obj_level1.star_coin4=true
and obj_level1.star_coin5=true
and obj_level2.star_coin1=true
and obj_level2.star_coin2=true
and obj_level2.star_coin3=true
and obj_level2.star_coin4=true
and obj_level2.star_coin5=true
and obj_level3.star_coin1=true
and obj_level3.star_coin2=true
and obj_level3.star_coin3=true
and obj_level3.star_coin4=true
and obj_level3.star_coin5=true
and obj_level4.star_coin1=true
and obj_level4.star_coin2=true
and obj_level4.star_coin3=true
and obj_level4.star_coin4=true
and obj_level4.star_coin5=true
and obj_level5.star_coin1=true
and obj_level5.star_coin2=true
and obj_level5.star_coin3=true
and obj_level5.star_coin4=true
and obj_level5.star_coin5=true
and obj_level6.star_coin1=true
and obj_level6.star_coin2=true
and obj_level6.star_coin3=true
and obj_level6.star_coin4=true
and obj_level6.star_coin5=true
and obj_level7.star_coin1=true
and obj_level7.star_coin2=true
and obj_level7.star_coin3=true
and obj_level7.star_coin4=true
and obj_level7.star_coin5=true
and obj_level8.star_coin1=true
and obj_level8.star_coin2=true
and obj_level8.star_coin3=true
and obj_level8.star_coin4=true
and obj_level8.star_coin5=true
and obj_level9.star_coin1=true
and obj_level9.star_coin2=true
and obj_level9.star_coin3=true
and obj_level9.star_coin4=true
and obj_level9.star_coin5=true
{if!steam_get_achievement("ach_get_every_starcoin"){steam_set_achievement("ach_get_every_starcoin");}}/*Get Every Star Coin Achievement END*/
/*Set Steam Achievements END*/


/*Give the player lives if they get a game over*/
if lives&lt;=0{
if lives&lt;0{global.playergame=0{lives=5;}}
else if global.playergame=1{lives=5;}
else if global.playergame=2{lives=10;}
else if global.playergame=3{lives=15;}}/*Give the player lives if they get a game over END*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
