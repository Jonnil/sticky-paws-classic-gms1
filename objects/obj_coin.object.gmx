<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_coin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*obj_coin Create Event*/
bounceup=false;delay=0;delay_time=0;
if asset_get_type("spr_wall")==asset_object{mask_index=spr_wall;}
coinsound=false;
depth=-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*obj_coin Create Event*/
//bounceup=false;

/*obj_coin Step Event*/
if bounceup=false{if asset_get_type("obj_camera")==asset_object and instance_number(obj_camera)&gt;0{image_index=obj_camera.image_index;}}
//*When player is invincible*/if bounceup=false{if distance_to_object(obj_player)&lt;128{move_towards_point(obj_player.x,obj_player.y,obj_player.speed+4);}}
if bounceup=false{depth=-bbox_bottom;if place_meeting(bbox_left,y,obj_player)or place_meeting(bbox_right,y,obj_player)or place_meeting(x,bbox_top,obj_player)or place_meeting(x,bbox_bottom,obj_player){if!collision_line(x,y,instance_nearest(x,y,obj_player).x,instance_nearest(x,y,obj_player).y,obj_wall,false,true){effect_create_above(ef_ring,x,y,0,c_white);score+=200;global.hud_show_score=true;if instance_number(obj_camera)&gt;0{with(obj_camera){hud_show_score_timer=global.hud_show_timer;}}/*if asset_get_type("obj_scoreup")==asset_object{obj=instance_create(x,y,obj_scoreup);with(obj){scoreup=200;}}*/with(instance_nearest(x,y,obj_player)){coins+=1;}global.coins+=1;global.hud_show_coins=true;if instance_number(obj_camera)&gt;0{with(obj_camera){with(obj_camera){hud_show_coins_timer=global.hud_show_timer;}}}if asset_get_type("snd_coin")==asset_sound{audio_play_sound(snd_coin,0,0);audio_sound_gain(snd_coin,global.sfx_volume,0);}instance_destroy();}}}
if bounceup=true{if delay&gt;=delay_time{if coinsound=false{if asset_get_type("snd_coin")==asset_sound{audio_play_sound(snd_coin,0,0);audio_sound_gain(snd_coin,global.sfx_volume,0);}coinsound=true;}depth=-bbox_bottom*20;visible=true;/*Sets the gravity*/gravity_direction=270;/*Direction of the gravity*/gravity=0.5;/*The gravity*/
if vspeed&gt;0 and y&gt;ystart-32{score+=200;global.hud_show_score=true;if instance_number(obj_camera)&gt;0{with(obj_camera){hud_show_score_timer=global.hud_show_timer;}}/*if asset_get_type("obj_scoreup")==asset_object{obj=instance_create(x,y,obj_scoreup);with(obj){scoreup=200;}}*/with(instance_nearest(x,y,obj_player)){coins+=1;}global.coins+=1;global.hud_show_coins=true;if instance_number(obj_camera)&gt;0{with(obj_camera){hud_show_coins_timer=global.hud_show_timer;}}effect_create_above(ef_ring,x,y,0,c_white);instance_destroy();}}else{delay+=1;visible=false;y=ystart;}
/*Don't go outside view boundary*/if x&lt;view_xview+32{x=view_xview+32;}if x&gt;view_xview+view_wview-32{x=view_xview+view_wview-32;}}

/*obj_coin Collision Event with obj_question_block*/
//if other.image_xscale&gt;1{bounceup=true;image_speed=1;motion_set(90,5);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_question_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*obj_coin Collision Event with obj_question_block*/
if other.image_xscale&gt;1{bounceup=true;image_speed=1;motion_set(90,5);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
