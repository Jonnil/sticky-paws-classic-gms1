<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*obj_goomba Create Event*/
image_speed=0.3;
image_xscale=-1;
flat=false;
die=false;
die_volting=false;
mask=sprite_index;
if asset_get_type("snd_enemyvoice_defeated")==asset_sound{enemyvoice_defeated1=snd_enemyvoice_defeated;}else{enemyvoice_defeated1=noone;}
if asset_get_type("snd_enemyvoice_defeated2")==asset_sound{enemyvoice_defeated2=snd_enemyvoice_defeated2;}else{enemyvoice_defeated2=noone;}
if asset_get_type("snd_enemyvoice_defeated3")==asset_sound{enemyvoice_defeated3=snd_enemyvoice_defeated3;}else{enemyvoice_defeated3=noone;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*obj_goomba Step Event*/
depth=-bbox_bottom*2;

/*If enemies are disabled, destroy this object*/if global.enable_enemies=false{instance_destroy();}

if die_volting=-1or die_volting=+1{depth=-bbox_bottom*99999;if die_volting=-1{image_angle-=20;hspeed=+4;}else{image_angle+=20;hspeed=-4;}
/*Sets the gravity*/gravity_direction=270;/*Direction of the gravity*/gravity=0.5;/*The gravity*/}else{
/*Sets the gravity*/gravity_direction=270;/*Direction of the gravity*/if asset_get_type("obj_wall")==asset_object{if(!place_meeting(x,y+1,obj_wall))and x&lt;view_xview+view_wview and x&gt;view_xview and y&lt;view_yview+view_hview and y&gt;view_yview{gravity=0.5;/*The gravity*/}}else{gravity=0;}
if image_xscale&lt;0{hspeed=-1;}else{hspeed=+1;}
if flat=true{/*image_yscale=lerp(image_yscale,0.1,0.2);*/speed=0;image_speed=0.5;if asset_get_type("spr_enemy_flat")==asset_sprite{sprite_index=spr_enemy_flat;}if image_index&gt;image_number-1{
effect_create_above(ef_smoke,x,y,2,c_white);
instance_destroy();}}}
mask_index=mask;
if flat=false{if distance_to_object(obj_player)&lt;256{sprite_index=spr_enemy_angry;}else{sprite_index=spr_enemy;}}

/*Turn around*/
if position_meeting(bbox_left-1,y,obj_wall){image_xscale=+1;}
if position_meeting(bbox_right+1,y,obj_wall){image_xscale=-1;}

if position_meeting(x,y,obj_wall){flat=true;die=true;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*obj_goomba Collision Event with obj_wall*/
/*________________________________Collision Event with a solid object________________________________*/
if die_volting=0 or die=false{
while(place_meeting(x,y,other)){x+=lengthdir_x(0.5,point_direction(other.x,other.y,x,y));y+=lengthdir_y(0.5,point_direction(other.x,other.y,x,y));}
if place_meeting(x,bbox_bottom+1,other){vspeed=0;gravity=0;}
if place_meeting(x,y-1,other){vspeed+=4;}
if position_meeting(bbox_left-1,bbox_bottom-8,other)or position_meeting(bbox_left-1,bbox_top+8,other){hspeed=0;}
if position_meeting(bbox_right+1,bbox_bottom-8,other)or position_meeting(bbox_right+1,bbox_top+8,other){hspeed=0;}
/*Turn around*/
//if place_meeting(x-1,y,obj_wall){image_xscale=+1;}
//if place_meeting(x+1,y,obj_wall){image_xscale=-1;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Turn around*/
if die=false{
if other.die=false{while(place_meeting(x,y,other)){x+=lengthdir_x(0.5,point_direction(other.x,other.y,x,y));y+=lengthdir_y(0.5,point_direction(other.x,other.y,x,y));}
if position_meeting(bbox_left-1,y,other)and other.die=false{image_xscale=+1;}
if position_meeting(bbox_right+1,y,other)and other.die=false{image_xscale=-1;}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
