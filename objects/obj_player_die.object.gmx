<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_die</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*obj_player_die Create Event*/
count=0;last_player=false;iris_xscale=16;iris_yscale=16;iris_zoom=0;xx=x;yy=y;
bubble=false;
if bubble=false{lives-=1;global.lives_until_assist+=1;}
player=1;
global.hud_show_lives=true;if instance_number(obj_camera)&gt;0{with(obj_camera){hud_show_lives_timer=global.hud_show_timer;}}

voice_damage=noone;
voice_burned_die=noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*obj_player_die Create Event*/
//count=0;last_player=false;iris_xscale=16;iris_yscale=16;iris_zoom=0;xx=x;yy=y;
depth=-room_height*room_width*999999;

/*obj_player_die Draw Event*/

/*Color Skin*/
if player=1{image_blend=global.hex_color_for_player_1;}
if player=2{image_blend=global.hex_color_for_player_2;}
if player=3{image_blend=global.hex_color_for_player_3;}
if player=4{image_blend=global.hex_color_for_player_4;}/*Color Skin END*/

if player=1{with(obj_camera){player1=noone;}}
if player=2{with(obj_camera){player2=noone;}}
if player=3{with(obj_camera){player3=noone;}}
if player=4{with(obj_camera){player4=noone;}}

count+=1;

if count=1{if instance_number(obj_player)=0{last_player=true;}}

if count=50{
if asset_get_type("obj_lava")==asset_object{if place_meeting(x,y,obj_lava){if asset_get_type("spr_player_burnt")==asset_sprite{sprite_index=spr_player_burnt;}audio_play_sound(voice_burned_die,0,0);audio_sound_gain(voice_burned_die,global.voices_volume,0);}
else{audio_play_sound(voice_damage,0,0);audio_sound_gain(voice_damage,global.voices_volume,0);}}
else{audio_play_sound(voice_damage,0,0);audio_sound_gain(voice_damage,global.voices_volume,0);}
gravity_direction=270;gravity=0.5;vspeed=-10;image_speed=0.3;
}

if asset_get_type("spr_player_burnt")==asset_sprite{if sprite_index=spr_player_burnt{effect_create_above(ef_smoke,x,bbox_bottom,0,c_black);}}

if instance_number(obj_player)=0and count=50and last_player=true{if asset_get_type("snd_die_melody")==asset_sound{audio_play_sound(snd_die_melody,0,0);audio_sound_gain(snd_die_melody,global.music_volume,0);}}

/*When you get a game over, reset checkpoints*/
if lives&lt;0{global.x_checkpoint=0;global.y_checkpoint=0;
global.checkpoint_millisecond=0;
global.checkpoint_second=0;
global.checkpoint_minute=0;
global.checkpoint_realmillisecond=0;}
/*When you get a game over, reset checkpoints END*/


if vspeed&gt;+32{vspeed=+32}
if y&gt;view_yview+view_hview and instance_number(obj_player)&lt;1 and iris_xscale&lt;=0.001{global.time_countdown=500;sprite_index=noone;gravity=0;speed=0;if asset_get_type("snd_die_melody")==asset_sound{if!audio_is_playing(snd_die_melody){
if lives&gt;-1{global.timeattack_realmillisecond=0;/*Was 999999999 before*/global.theme="ground";global.weather=noone;global.level_clear_rate="enter";scr_savelevel();audio_stop_all();
/*Go to Level Editor if you die in Level Editor*/if asset_get_type("room_leveleditor")==asset_room and room=room_leveleditor{global.play_edited_level=false;room_restart();}else
/*Otherwise go to Level Select*/if asset_get_type("room_level_select")==asset_room{room_goto(room_level_select);}else{room_restart();}}else{global.timeattack_realmillisecond=0;/*Was 999999999 before*/global.theme="ground";global.weather=noone;global.level_clear_rate="enter";scr_savelevel();audio_stop_all();if asset_get_type("room_game_over")==asset_room{room_goto(room_game_over);}else{game_restart();}}
}}else{
if lives&gt;-1{global.timeattack_realmillisecond=0;/*Was 999999999 before*/global.theme="ground";global.weather=noone;global.level_clear_rate="enter";scr_savelevel();audio_stop_all();
/*Go to Level Editor if you die in Level Editor*/if asset_get_type("room_leveleditor")==asset_room and room=room_leveleditor{global.play_edited_level=false;room_restart();}else
/*Otherwise go to Level Select*/if asset_get_type("room_level_select")==asset_room{room_goto(room_level_select);}else{room_restart();}}else{global.timeattack_realmillisecond=0;/*Was 999999999 before*/global.theme="ground";global.weather=noone;global.level_clear_rate="enter";scr_savelevel();audio_stop_all();if asset_get_type("room_game_over")==asset_room{room_goto(room_game_over);}else{game_restart();}}
}}
else if y&gt;view_yview+view_hview{if lives&gt;0 and instance_number(obj_player)&gt;0{
instance_destroy();
}}

if y&gt;view_yview+view_hview{y=view_yview+view_hview+1;sprite_index=noone;}

if instance_number(obj_player)=0and count&gt;49and last_player=true{
if iris_zoom=0{
iris_xscale=lerp(iris_xscale,1,0.1);
iris_yscale=lerp(iris_yscale,1,0.1);}
else{iris_xscale=lerp(iris_xscale,0,0.1);
iris_yscale=lerp(iris_yscale,0,0.1);}
if iris_xscale&lt;=1.1{iris_zoom=1;}

if asset_get_type("obj_player_die")==asset_object{if instance_number(obj_player_die)&gt;0{
if iris_xscale&lt;16{
if asset_get_type("spr_iris_dead")==asset_sprite{draw_sprite_ext(spr_iris_dead,image_index,xx,yy,iris_xscale,iris_yscale,image_angle,image_blend,image_alpha);}else
{draw_sprite_ext(spr_iris,image_index,xx,yy,iris_xscale,iris_yscale,image_angle,image_blend,image_alpha);}
draw_rectangle_colour(0,0,view_xview+view_wview,yy-iris_yscale*128,c_black,c_black,c_black,c_black,false);
draw_rectangle_colour(0,0,xx-iris_xscale*128,view_yview+view_hview,c_black,c_black,c_black,c_black,false);
draw_rectangle_colour(xx+iris_xscale*128,0,view_xview+view_wview,view_yview+view_hview,c_black,c_black,c_black,c_black,false);
draw_rectangle_colour(0,yy+iris_yscale*128,view_xview+view_wview,view_yview+view_hview,c_black,c_black,c_black,c_black,false);
}}}}
if image_index&gt;image_number-1{image_speed=0;}else{image_speed=0.5;}
if sprite_index&gt;noone{draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);}

/*Bubble*/
if bubble=true{
/*Get bubble sprite*/sprite_index=spr_player_bubble;/*Get bubble sprite End*/
/*Don't go outside view boundary*/if x&lt;view_xview+32{x=view_xview+32;}if x&gt;view_xview+view_wview-32{x=view_xview+view_wview-32;}if y&lt;view_yview+32{y=view_yview+32;}if y&gt;view_yview+view_hview-32{y=view_yview+view_hview-32;}

/*Customisable keyboard array*/
if player=1 or player=0{
gamepad_set_axis_deadzone(0,0.25);
key_up=(keyboard_check(vk_up))and(!keyboard_check(vk_down))or(keyboard_check(vk_numpad8))and(!keyboard_check(vk_numpad2))or(keyboard_check(ord("W")))and(!keyboard_check(ord("S")))or(gamepad_button_check(0,gp_padu))and(!gamepad_button_check(0,gp_padd))or(gamepad_axis_value(0,gp_axislv)&lt;0);
key_left=(keyboard_check(vk_left))and(!keyboard_check(vk_right))or(keyboard_check(vk_numpad4))and(!keyboard_check(vk_numpad6))or(keyboard_check(ord("A")))and(!keyboard_check(ord("D")))or(gamepad_button_check(0,gp_padl))and(!gamepad_button_check(0,gp_padr))or(gamepad_axis_value(0,gp_axislh)&lt;0);
key_right=(keyboard_check(vk_right))and(!keyboard_check(vk_left))or(keyboard_check(vk_numpad6))and(!keyboard_check(vk_numpad4))or(keyboard_check(ord("D")))and(!keyboard_check(ord("A")))or(gamepad_button_check(0,gp_padr))and(!gamepad_button_check(0,gp_padl))or(gamepad_axis_value(0,gp_axislh)&gt;0);
key_down=(keyboard_check(vk_down))and(!keyboard_check(vk_up))or(keyboard_check(vk_numpad2))and(!keyboard_check(vk_numpad8))or(keyboard_check(ord("S")))and(!keyboard_check(ord("W")))or(gamepad_button_check(0,gp_padd))and(!gamepad_button_check(0,gp_padu))or(gamepad_axis_value(0,gp_axislv)&gt;0);
key_a=global.controls_layout=1and(gamepad_button_check_pressed(0,gp_face1))or(gamepad_button_check_pressed(0,gp_face2))or global.controls_layout=2and(gamepad_button_check_pressed(0,gp_face3))or(keyboard_check_pressed(ord("Z")))or(keyboard_check_pressed(vk_enter))or(keyboard_check_pressed(vk_space));
}
if player=2{
gamepad_set_axis_deadzone(1,0.25);
key_up=(gamepad_button_check(1,gp_padu))and(!gamepad_button_check(1,gp_padd))or(gamepad_axis_value(1,gp_axislv)&lt;0);
key_left=(gamepad_button_check(1,gp_padl))and(!gamepad_button_check(1,gp_padr))or(gamepad_axis_value(1,gp_axislh)&lt;0);
key_right=(gamepad_button_check(1,gp_padr))and(!gamepad_button_check(1,gp_padl))or(gamepad_axis_value(1,gp_axislh)&gt;0);
key_down=(gamepad_button_check(1,gp_padd))and(!gamepad_button_check(1,gp_padu))or(gamepad_axis_value(1,gp_axislv)&gt;0);
key_a=global.controls_layout=1and(gamepad_button_check_pressed(1,gp_face1))or(gamepad_button_check_pressed(1,gp_face2))or global.controls_layout=2and(gamepad_button_check_pressed(1,gp_face3));
}
if player=3{
gamepad_set_axis_deadzone(2,0.25);
key_up=(gamepad_button_check(2,gp_padu))and(!gamepad_button_check(2,gp_padd))or(gamepad_axis_value(2,gp_axislv)&lt;0);
key_left=(gamepad_button_check(2,gp_padl))and(!gamepad_button_check(2,gp_padr))or(gamepad_axis_value(2,gp_axislh)&lt;0);
key_right=(gamepad_button_check(2,gp_padr))and(!gamepad_button_check(2,gp_padl))or(gamepad_axis_value(2,gp_axislh)&gt;0);
key_down=(gamepad_button_check(2,gp_padd))and(!gamepad_button_check(2,gp_padu))or(gamepad_axis_value(2,gp_axislv)&gt;0);
key_a=global.controls_layout=1and(gamepad_button_check_pressed(2,gp_face1))or (gamepad_button_check_pressed(2,gp_face2))or global.controls_layout=2and(gamepad_button_check_pressed(2,gp_face3));
}
if player=4{
gamepad_set_axis_deadzone(3,0.25);
key_up=(gamepad_button_check(3,gp_padu))and(!gamepad_button_check(3,gp_padd))or(gamepad_axis_value(3,gp_axislv)&lt;0);
key_left=(gamepad_button_check(3,gp_padl))and(!gamepad_button_check(3,gp_padr))or(gamepad_axis_value(3,gp_axislh)&lt;0);
key_right=(gamepad_button_check(3,gp_padr))and(!gamepad_button_check(3,gp_padl))or(gamepad_axis_value(3,gp_axislh)&gt;0);
key_down=(gamepad_button_check(3,gp_padd))and(!gamepad_button_check(3,gp_padu))or(gamepad_axis_value(3,gp_axislv)&gt;0);
key_a=global.controls_layout=1and(gamepad_button_check_pressed(3,gp_face1))or(gamepad_button_check_pressed(3,gp_face2))or global.controls_layout=2and(gamepad_button_check_pressed(3,gp_face3));
}

image_speed=0.5;
gravity=0;
if key_up{vspeed-=0.4;}
if key_left{hspeed-=0.4;image_xscale=-1;}
if key_right{hspeed+=0.4;image_xscale=+1;}
if key_down{vspeed+=0.4;}
if key_a{move_towards_point(instance_nearest(x,y,obj_player).x,instance_nearest(x,y,obj_player).y,128);}
if!position_meeting(x,y,obj_wall) and place_meeting(x,y,obj_player){vspeed=-11.5;bubble=false;}
if vspeed&lt;-4{vspeed=-4;}if hspeed&lt;-4{hspeed=-4;}if hspeed&gt;+4{hspeed=+4;}if vspeed&gt;+4{vspeed=+4;}
friction=0.2;

/*Bubble*/draw_self();
draw_circle_colour(x,y,52,c_black,c_black,true);
draw_circle_colour(x,y,53,c_white,c_white,true);
draw_circle_colour(x,y,54,c_white,c_white,true);
draw_circle_colour(x,y,55,c_white,c_white,true);
draw_circle_colour(x,y,56,c_black,c_black,true);

/*If there are no more players in the room*/if instance_number(obj_player)&lt;1{bubble=false;count=0;}

}

/*Time Over Message*/if global.time_countdown&lt;=9 and global.player_has_entered_goal=false{draw_set_halign(fa_center);draw_set_valign(fa_center);
draw_text_transformed_colour(view_xview+view_wview/2-2,view_yview+view_hview/2,"TIME OVER",2,2,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2+2,view_yview+view_hview/2,"TIME OVER",2,2,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2-2,"TIME OVER",2,2,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2+2,"TIME OVER",2,2,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(view_xview+view_wview/2,view_yview+view_hview/2,"TIME OVER",2,2,0,c_white,c_white,c_white,c_white,1);}/*Time Over Message End*/

/*Multiplayer Colors*/
if global.playergame&gt;0{
draw_set_halign(fa_center);draw_set_valign(fa_center);
draw_text_transformed_colour(x-2,y-64,"P"+string(player),1,1,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x+2,y-64,"P"+string(player),1,1,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x,y-64-2,"P"+string(player),1,1,0,c_black,c_black,c_black,c_black,1);
draw_text_transformed_colour(x,y-64+2,"P"+string(player),1,1,0,c_black,c_black,c_black,c_black,1);
if player=1{draw_text_transformed_colour(x,y-64,"P"+string(player),1,1,0,c_red,c_red,c_red,c_red,1);}
if player=2{draw_text_transformed_colour(x,y-64,"P"+string(player),1,1,0,c_lime,c_lime,c_lime,c_lime,1);}
if player=3{draw_text_transformed_colour(x,y-64,"P"+string(player),1,1,0,c_yellow,c_yellow,c_yellow,c_yellow,1);}
if player=4{draw_text_transformed_colour(x,y-64,"P"+string(player),1,1,0,c_aqua,c_aqua,c_aqua,c_aqua,1);}}
/*Multiplayer Colors End*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
